{"version":3,"sources":["components/dropdown/Dropdown.module.css","components/graphite/Graphite.module.css","JsonColorScheme.module.css","components/InputParameter/InputParameter.module.css","components/queryConsole/QueryConsole.module.css","components/queryField/QueryField.module.css","components/dynamicParameter/DynamicParameter.module.css","components/jsonDisplayer/JsonDIsplayer.module.css","components/schema/Schema.module.css","components/typeLabel/TypeLabel.module.css","assets/icons/graphqlIcon.png","components/schema/schemaThemes/Classic.module.css","components/schema/schemaThemes/Dark.module.css","components/loadingIcon/LoadingIcon.module.css","components/marker/Marker.js","components/typeLabel/TypeLabel.js","components/field/Field.js","utils/UtilMethods.js","components/types/object/Object.js","components/types/scalar/Scalar.js","components/types/union/Union.js","components/types/enum/Enum.js","components/types/input/Input.js","components/schema/Schema.js","components/inputParameterList/InputParameterList.js","components/InputParameter/InputParameter.js","components/dynamicParameter/DynamicParameter.js","components/queryField/QueryField.js","components/jsonDisplayer/JsonDisplayer.js","components/loadingIcon/LoadingIcon.js","components/queryConsole/QueryConsole.js","components/dropdown/Dropdown.js","components/graphite/Graphite.js","utils/introspection/introspection.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Marker","colorTheme","this","props","theme","index","word","indexOf","pattern","leftPart","substr","middlePart","length","rightPart","className","marker","React","Component","TypeLabel","handleClick","control","console","log","name","type","styles","plain","controlClass","underline","kind","TypeKind","NON_NULL","punctuationMarks","getTypeName","ofType","LIST","typeLabel","onClick","Field","args","result","argObjectsOneLine","map","arg","i","key","paramName","model","argObjectsMultipleLines","tab","typeField","classFieldColor","getArgs","typeLabelContainsPattern","includes","inputFieldCheck","fields","reduce","currField","fullTypeContainsPattern","interfaces","prevType","currType","possibleTypes","inputFields","enumValues","res","ObjectType","field","_interface","INTERFACE","render","typeContainer","keyword","Scalar","Union","Enum","value","enumField","Input","Schema","onThemeChange","e","setState","schemaTheme","target","localStorage","setItem","state","searchInputChangeHandler","test","filter","ans","filterCheck","ENUM","SCALAR","UNION","INPUT_OBJECT","OBJECT","getItem","addEventListeners","types","themes","classic","dark","document","addEventListener","event","sort","type1","type2","localeCompare","createElement","themeOptions","Object","keys","plainTextColor","container","mainContainer","panel","panelHeader","onChange","placeholder","handleCheck","checked","typeKind","InputParameterList","id","active","elems","slice","concat","arr","push","counter","receiveFromChild","receiver","inputs","elem","typeDict","clickHandler","_key","InputParameter","getTypeKindRecursively","root","listElem","Array","isArray","handleChange","getScalarType","parseInt","getTypeNameRecursively","isListObject","getListElemTypeName","markup","input","isListContainer","style","marginLeft","button","renderInputField","required","renderInputObjects","DynamicParameter","fieldCount","argCount","inputFieldLabel","renderArgs","queryFieldLabel","renderFields","QueryField","handleQueryTypeChange","queryType","receiveQueryFields","queryObject","serializedQuery","serializeQuery","query","__schema","queryHandler","alert","undefined","queryFieldType","mutation","prevProps","prevState","snapshot","schema","mutationType","connected","red","textareaContainer","select","renderQuery","forEach","serializeJson","argStr","addition","JsonDisplayer","handleScroll","scrollHandler","viewportRef","current","scrollTop","data","createRef","refArr","offset","visible","getData","minIndex","Math","min","displayedDataSize","upVirtualHeight","lineHeight","downVirtualHeight","ref","onScroll","virtualPad","height","minHeight","row","paddingLeft","tabs","LoadingIcon","QueryConsole","dataLength","scrollTopNumUp","tolerance","diff","ceil","newMinIndex","max","handleMouseDown","drag","prevX","clientX","handleMouseUp","moveHandler","newConsoleWidth","consoleWidth","handleResize","consoleRef","getBoundingClientRect","width","containerRef","getRenderModel","entry","recursiveRenderJsonObject","recursiveRenderJsonObjectBody","jsonTheme","nullColor","numValue","queryContainer","handle","onMouseDown","handleVision","resultContainer","window","innerWidth","recursiveRenderJson","loading","MenuItem","info","logo","menuItemTitleContainer","onCLick","url","title","selectedIconContainer","selectedIcon","src","defaultIcon","selectedText","Dropdown","hideBar","handleItemClick","changeHandler","apiTitle","d","iconColor","apis","api","onMouseLeave","titleContainer","alt","svgContainer","svg","xmlns","viewBox","fill","getCorrectSvgPath","menuContainer","Graphite","fetchSchema","addressValue","fetch","method","headers","body","JSON","stringify","then","ok","json","statusText","obj","dict","schemaModel","connectionEstablished","catch","error","sendQuery","replace","errors","handleError","handleData","message","inputChanged","handleSchemaClick","schemaVisibility","handleQuery","downHandler","upHandler","schemaWidth","queryWidth","queryResult","queryWindowRef","ideContainer","addressContainer","dropDown","schemaContainer","buttonContainer","schemaButtonActive","schemaButton","schemaSvg","handler","display","hitArea","contentContainer","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96397acb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dropdown_container__YHgjy\",\"titleContainer\":\"Dropdown_titleContainer__xMNLv\",\"menuItemTitleContainer\":\"Dropdown_menuItemTitleContainer__K34fw\",\"menuContainer\":\"Dropdown_menuContainer__wlqPI\",\"selectedIcon\":\"Dropdown_selectedIcon__3kUDt\",\"selectedIconContainer\":\"Dropdown_selectedIconContainer__3uuJR\",\"selectedText\":\"Dropdown_selectedText__2LF5r\",\"iconColor\":\"Dropdown_iconColor__23-EQ\",\"svgContainer\":\"Dropdown_svgContainer__1VIpP\",\"svg\":\"Dropdown_svg__2-Qio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Graphite_container__3Lp_S\",\"ideContainer\":\"Graphite_ideContainer__1lvBn\",\"dragger\":\"Graphite_dragger__WRc3g\",\"draggerVisiblePart\":\"Graphite_draggerVisiblePart__38b2i\",\"addressContainer\":\"Graphite_addressContainer__18N-R\",\"queryContainer\":\"Graphite_queryContainer__mFod1\",\"buttonContainer\":\"Graphite_buttonContainer__17vev\",\"schemaButton\":\"Graphite_schemaButton__3nfup\",\"schemaButtonActive\":\"Graphite_schemaButtonActive__2d_gR\",\"contentContainer\":\"Graphite_contentContainer__3RogT\",\"schemaContainer\":\"Graphite_schemaContainer__3IGnL\",\"schemaSvg\":\"Graphite_schemaSvg__3J829\",\"handler\":\"Graphite_handler__ciI4U\",\"hitArea\":\"Graphite_hitArea__SIF7m\",\"dropDown\":\"Graphite_dropDown__25CFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"JsonColorScheme_key__21Nlt\",\"stringValue\":\"JsonColorScheme_stringValue__3TZrX\",\"numValue\":\"JsonColorScheme_numValue__2R_MJ\",\"nullColor\":\"JsonColorScheme_nullColor__1NJY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InputParameter_container__2vuL6\",\"button\":\"InputParameter_button__2lKtx\",\"active\":\"InputParameter_active__2Stz4\",\"type\":\"InputParameter_type__1U_eA\",\"required\":\"InputParameter_required__3UzoK\",\"input\":\"InputParameter_input__2TxEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QueryConsole_container__2sJua\",\"queryContainer\":\"QueryConsole_queryContainer__3LvVF\",\"handle\":\"QueryConsole_handle__36tcv\",\"handleVision\":\"QueryConsole_handleVision__1l8sx\",\"resultContainer\":\"QueryConsole_resultContainer__3QuRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QueryField_container__UE1YW\",\"textareaContainer\":\"QueryField_textareaContainer__igKT4\",\"button\":\"QueryField_button__10uka\",\"fieldRow\":\"QueryField_fieldRow__1HduS\",\"select\":\"QueryField_select__2as_Q\",\"tab\":\"QueryField_tab__11IrX\",\"red\":\"QueryField_red__BGCP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DynamicParameter_active__1_vRZ\",\"container\":\"DynamicParameter_container__12E7W\",\"button\":\"DynamicParameter_button__3yz9A\",\"queryFieldLabel\":\"DynamicParameter_queryFieldLabel__Dz50e\",\"inputFieldLabel\":\"DynamicParameter_inputFieldLabel__2ayIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"JsonDIsplayer_tab__3d00y\",\"container\":\"JsonDIsplayer_container__1HN7D\",\"row\":\"JsonDIsplayer_row__2FVAz\",\"marker\":\"JsonDIsplayer_marker__3SWmx\",\"virtualPad\":\"JsonDIsplayer_virtualPad__QfJFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Schema_container__XUajz\",\"panel\":\"Schema_panel__2ERJJ\",\"panelHeader\":\"Schema_panelHeader__2XHBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"underline\":\"TypeLabel_underline__2GeoO\",\"plain\":\"TypeLabel_plain__3f9qu\"};","module.exports = __webpack_public_path__ + \"static/media/graphqlIcon.adb90a3e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyword\":\"Classic_keyword__3C4uC\",\"plainTextColor\":\"Classic_plainTextColor__2L7Hy\",\"classFieldColor\":\"Classic_classFieldColor__37iPp\",\"typeField\":\"Classic_typeField__2VQp4\",\"typeContainer\":\"Classic_typeContainer__2WGVb\",\"typeLabel\":\"Classic_typeLabel__3eQos\",\"typeLabelHover\":\"Classic_typeLabelHover__34yrl\",\"enumField\":\"Classic_enumField__2COdR\",\"paramName\":\"Classic_paramName__1vHUw\",\"tab\":\"Classic_tab__3Mjtb\",\"marker\":\"Classic_marker__3GmQd\",\"mainContainer\":\"Classic_mainContainer__Om-N3\",\"punctuationMarks\":\"Classic_punctuationMarks__3B-7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyword\":\"Dark_keyword__3DaaD\",\"plainTextColor\":\"Dark_plainTextColor__1G18h\",\"classFieldColor\":\"Dark_classFieldColor__2sjPM\",\"typeField\":\"Dark_typeField__imGBO\",\"typeContainer\":\"Dark_typeContainer__UJK5c\",\"typeLabel\":\"Dark_typeLabel__1rvEa\",\"typeLabelHover\":\"Dark_typeLabelHover__12mPs\",\"enumField\":\"Dark_enumField__frahy\",\"paramName\":\"Dark_paramName__1_zEg\",\"tab\":\"Dark_tab__2V0r0\",\"punctuationMarks\":\"Dark_punctuationMarks__3aHF6\",\"marker\":\"Dark_marker__3azQh\",\"mainContainer\":\"Dark_mainContainer__1DRQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingIcon_container__3i94n\"};","import React from \"react\";\r\n\r\nexport default class Marker extends React.Component{\r\n    render() {\r\n\r\n        const colorTheme = this.props.theme;\r\n\r\n        const index = this.props.word.indexOf(this.props.pattern);\r\n        if(index === -1){\r\n            return this.props.word;\r\n        }\r\n\r\n        const leftPart = this.props.word.substr(0,index);\r\n        const middlePart = this.props.word.substr(index, this.props.pattern.length);\r\n        const rightPart = this.props.word.substr(index + this.props.pattern.length);\r\n\r\n        return <label>{leftPart}<label className={colorTheme.marker}>{middlePart}</label>{rightPart}</label>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from './TypeLabel.module.css'\r\nimport {TypeKind} from \"graphql\";\r\nimport Marker from \"../marker/Marker\";\r\n\r\nexport default class TypeLabel extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.name = \"\";\r\n    }\r\n\r\n    handleClick = () => {\r\n        if(this.props.control){\r\n            console.log(this.name);\r\n        }\r\n    }\r\n\r\n    getTypeName(type){\r\n        if(type === null){\r\n            return <label className={styles.plain}>unknown</label>;\r\n        }\r\n\r\n        const controlClass = this.props.control ? styles.underline : styles.plain;\r\n\r\n        switch (type.kind) {\r\n            case TypeKind.NON_NULL:\r\n                return (<label className={this.props.theme.punctuationMarks}>{this.getTypeName(type.ofType)}!</label>);\r\n            case TypeKind.LIST:\r\n                return (<label className={this.props.theme.punctuationMarks}>[{this.getTypeName(type.ofType)}]</label>);\r\n            default:\r\n                this.name = type.name;\r\n                return <label className={controlClass + \" \" + this.props.theme.typeLabel} onClick={this.handleClick}>\r\n                            <Marker word={type.name}\r\n                                    pattern={this.props.pattern}\r\n                                    theme={this.props.theme}\r\n                            />\r\n                </label>;\r\n        }\r\n    }\r\n\r\n    render(){\r\n       return this.getTypeName(this.props.type);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport TypeLabel from \"../typeLabel/TypeLabel\";\r\nimport Marker from \"../marker/Marker\";\r\n\r\nexport default class Field extends React.Component{\r\n\r\n    getArgs(args){\r\n\r\n        const colorTheme = this.props.theme;\r\n\r\n        const argObjectsOneLine = args.map((arg, i) => <label key={arg.name} className={this.props.theme.punctuationMarks}>\r\n            <label className={colorTheme.paramName}>{arg.name}</label>{': '}\r\n            <TypeLabel type={this.props.model.type} control={this.props.control} pattern={this.props.pattern} theme={this.props.theme}/>{i < (args.length-1) && ', '}\r\n        </label>);\r\n\r\n        const argObjectsMultipleLines = args.map((arg, i) => <label key={arg.name} className={colorTheme.tab + \" \" + this.props.theme.punctuationMarks}>\r\n            <label className={colorTheme.paramName}>{arg.name}</label>{': '}\r\n            <TypeLabel type={this.props.model.type} control={this.props.control} pattern={this.props.pattern} theme={this.props.theme}/>{i < (args.length-1) && ', '} <br/>\r\n        </label>);\r\n        let result;\r\n\r\n        switch (args.length) {\r\n            case 0:\r\n                result = <label />\r\n                break;\r\n            case 1:\r\n            case 2:\r\n                result = <label >\r\n                    ({argObjectsOneLine})\r\n                </label>\r\n                break;\r\n            default:\r\n                result = <label>(\r\n                    <br/>\r\n                    {argObjectsMultipleLines})\r\n                </label>\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n\r\n        const colorTheme = this.props.theme;\r\n\r\n        return (<div className={colorTheme.typeField}>\r\n                    <label className={colorTheme.classFieldColor}>\r\n                        <Marker word={this.props.model.name}\r\n                                pattern={this.props.pattern}\r\n                                theme={this.props.theme}\r\n                        />\r\n                    </label>\r\n\r\n            {this.getArgs(this.props.model.args)}<span className={colorTheme.punctuationMarks}>{': '}</span>\r\n                    <TypeLabel type={this.props.model.type} control={this.props.control} pattern={this.props.pattern} theme={this.props.theme}/>\r\n                </div>);\r\n    }\r\n}\r\n","import {TypeKind} from \"graphql\";\r\n\r\nexport function typeLabelContainsPattern(type, pattern){\r\n    if(type.kind !== TypeKind.LIST && type.kind !== TypeKind.NON_NULL){\r\n        return type.name.includes(pattern);\r\n    }\r\n\r\n    return typeLabelContainsPattern(type.ofType, pattern);\r\n}\r\n\r\nfunction inputFieldCheck(fields, pattern){\r\n    return fields.reduce((result, currField) =>\r\n        result ||\r\n        currField.name.includes(pattern) ||\r\n        typeLabelContainsPattern(currField.type, pattern),\r\n        false);\r\n}\r\n\r\nexport function fullTypeContainsPattern(type, pattern){\r\n    let result = type.name.includes(pattern);\r\n\r\n    if(type.interfaces !== null){\r\n        result = type.interfaces.reduce((prevType, currType) => prevType || currType.name.includes(pattern),result);\r\n    }\r\n\r\n    if(type.possibleTypes !== null){\r\n        result = type.possibleTypes.reduce((prevType, currType) => prevType || currType.name.includes(pattern),result);\r\n    }\r\n\r\n    if(type.inputFields !== null){\r\n        result = result || inputFieldCheck(type.inputFields, pattern)\r\n    }\r\n\r\n    if(type.enumValues !== null){\r\n        result = type.enumValues.reduce((prevType, currType) => prevType || currType.name.includes(pattern),result);\r\n    }\r\n\r\n    if(type.fields !== null){\r\n        result = type.fields.reduce((res, currField) =>\r\n            res ||\r\n            currField.name.includes(pattern) ||\r\n            typeLabelContainsPattern(currField.type, pattern) ||\r\n            inputFieldCheck(currField.args, pattern),\r\n            result);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function removeWhitespaceForQuery(query){\r\n    let result = '';\r\n\r\n    for (let i=0;i<query.length;i++){\r\n        if(query[i]){\r\n\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Field from \"../../field/Field\";\r\nimport {TypeKind} from \"graphql\";\r\nimport TypeLabel from \"../../typeLabel/TypeLabel\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class ObjectType extends React.Component{\r\n    render(){\r\n        const colorTheme = this.props.theme;\r\n\r\n        const fields = this.props.model.fields.map(field =>\r\n            <Field model={field} key={field.name} control = {this.props.control} pattern={this.props.pattern} theme={this.props.theme}/>\r\n        );\r\n\r\n        let interfaces = []\r\n        if(this.props.model.interfaces !== null){\r\n            interfaces = this.props.model.interfaces.map((_interface,i) =>\r\n                <label key={_interface.name}>\r\n                    <TypeLabel type={_interface} control={this.props.control} pattern={this.props.pattern} theme={this.props.theme}/>\r\n                    {i === this.props.model.interfaces.length - 1 ? '' : ', '}\r\n                </label>)\r\n        }\r\n\r\n        let type = this.props.model.kind === TypeKind.INTERFACE ? 'interface' : 'type';\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || type.includes(this.props.pattern);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <div>\r\n                        <label className={colorTheme.keyword}><Marker word={type}\r\n                                                                      pattern={this.props.pattern}\r\n                                                                      theme={this.props.theme}\r\n                        /> </label>\r\n                        <Marker word={this.props.model.name}\r\n                                pattern={this.props.pattern}\r\n                                theme={this.props.theme}\r\n                        />\r\n                        {interfaces.length > 0 && <label className={colorTheme.keyword}><Marker word={' implements '}\r\n                                                                                                pattern={this.props.pattern}\r\n                                                                                                theme={this.props.theme}\r\n                        /></label>}\r\n                        {interfaces}\r\n                        {(<span className={this.props.theme.punctuationMarks}>{' {'}</span>)}\r\n                    </div>\r\n                    {fields}\r\n                    <div>{(<span className={this.props.theme.punctuationMarks}>{'}'}</span>)}</div>\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Scalar extends React.Component{\r\n\r\n    render() {\r\n        const colorTheme = this.props.theme;\r\n\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || 'scalar'.includes(this.props.pattern);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <label className={colorTheme.keyword}><Marker word={'scalar '}\r\n                                                                  pattern={this.props.pattern}\r\n                                                                  theme={this.props.theme}\r\n                    /></label>\r\n                    <label className={''}><Marker word={this.props.model.name}\r\n                                                  pattern={this.props.pattern}\r\n                                                  theme={this.props.theme}\r\n                    /></label>\r\n                </div>);\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport TypeLabel from \"../../typeLabel/TypeLabel\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Union extends React.Component{\r\n    render() {\r\n        const colorTheme = this.props.theme;\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || 'union'.includes(this.props.pattern);\r\n\r\n        const possibleTypes = this.props.model.possibleTypes.map((type, i) =>\r\n            <label key={type.name}>\r\n                <TypeLabel type={type} control={this.props.control} pattern={this.props.pattern} theme={this.props.theme}/>\r\n                {i === this.props.model.possibleTypes.length - 1 ? '' : (<span className={this.props.theme.punctuationMarks}>{' | '}</span>)}\r\n            </label>\r\n        );\r\n\r\n        return (!render ? null : <div>\r\n                    <label className={colorTheme.keyword}><Marker word={'union '}\r\n                                                                  pattern={this.props.pattern}\r\n                                                                  theme={this.props.theme}\r\n                    /></label>\r\n                    <label className={''}><Marker word={this.props.model.name}\r\n                                                  pattern={this.props.pattern}\r\n                                                  theme={this.props.theme}\r\n                    /></label>\r\n            {(<span className={this.props.theme.punctuationMarks}>{' = '}</span>)}\r\n                    {possibleTypes}\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Enum extends React.Component{\r\n    render() {\r\n\r\n        const colorTheme = this.props.theme;\r\n\r\n        const enumValues = this.props.model.enumValues.map(value => <div key={value.name} className={`${colorTheme.enumField} ${colorTheme.typeField}`}>\r\n            <Marker word={value.name}\r\n                    pattern={this.props.pattern}\r\n                    theme={this.props.theme}\r\n            />\r\n        </div>);\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || 'enum'.includes(this.props.pattern);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <label className={colorTheme.keyword}><Marker word={'enum '}\r\n                                                                  pattern={this.props.pattern}\r\n                                                                  theme={this.props.theme}\r\n                    /></label>\r\n                        <Marker word={this.props.model.name}\r\n                                pattern={this.props.pattern}\r\n                                theme={this.props.theme}\r\n                        /> {(<span className={this.props.theme.punctuationMarks}>{' {'}</span>)}\r\n                        {enumValues}\r\n                        {(<span className={this.props.theme.punctuationMarks}>{'}'}</span>)}\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport TypeLabel from \"../../typeLabel/TypeLabel\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Input extends React.Component{\r\n    render() {\r\n\r\n        const colorTheme = this.props.theme;\r\n\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern)  ||\r\n            'input'.includes(this.props.pattern) ||\r\n            this.props.model.name.includes(this.props.pattern);\r\n\r\n        const fields = this.props.model.inputFields.map(field =>\r\n            <div key={field.name} className={colorTheme.typeField}>\r\n                <label><Marker word={field.name}\r\n                               pattern={this.props.pattern}\r\n                               theme={this.props.theme}\r\n                /></label><span className={colorTheme}>{': '}</span>\r\n                <TypeLabel type={field.type} control={this.props.control} pattern={this.props.pattern} theme={this.props.theme}/>\r\n            </div>);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <div>\r\n                        <label className={colorTheme.keyword}>\r\n                            <Marker word={'input'}\r\n                                    pattern={this.props.pattern}\r\n                                    theme={this.props.theme}\r\n                            />\r\n                        </label> <Marker word={this.props.model.name}\r\n                                         pattern={this.props.pattern}\r\n                                         theme={this.props.theme}\r\n                    />{(<span className={this.props.theme.punctuationMarks}>{' {'}</span>)}\r\n                    </div>\r\n                    <div>{fields}</div>\r\n                    <div>{(<span className={this.props.theme.punctuationMarks}>{'{'}</span>)}</div>\r\n                </div>);\r\n    }\r\n}\r\n","import React, {createElement} from 'react'\r\nimport styles from './Schema.module.css'\r\nimport {TypeKind} from \"graphql\";\r\nimport ObjectType from \"../types/object/Object\";\r\nimport Scalar from \"../types/scalar/Scalar\";\r\nimport Union from \"../types/union/Union\";\r\nimport Enum from \"../types/enum/Enum\";\r\nimport Input from \"../types/input/Input\";\r\n\r\n// You can import themes here:\r\n\r\nimport classic from './schemaThemes/Classic.module.css'\r\nimport dark from './schemaThemes/Dark.module.css'\r\n\r\nexport default class Schema extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const theme = localStorage.getItem('theme');\r\n        console.log(theme);\r\n\r\n        this.state = {\r\n            control: false,\r\n            pattern: '',\r\n            schemaTheme:  theme ? theme : 'Classic',\r\n        };\r\n\r\n        this.state[TypeKind.OBJECT] = true;\r\n        this.state[TypeKind.SCALAR] = true;\r\n        this.state[TypeKind.INTERFACE] = true;\r\n        this.state[TypeKind.UNION] = true;\r\n        this.state[TypeKind.ENUM] = true;\r\n        this.state[TypeKind.INPUT_OBJECT] = true;\r\n\r\n        this.state['introspection'] = false;\r\n\r\n        this.addEventListeners();\r\n\r\n        this.types = {}\r\n        this.types[TypeKind.OBJECT] = ObjectType;\r\n        this.types[TypeKind.SCALAR] = Scalar;\r\n        this.types[TypeKind.INTERFACE] = ObjectType;\r\n        this.types[TypeKind.UNION] = Union;\r\n        this.types[TypeKind.ENUM] = Enum;\r\n        this.types[TypeKind.INPUT_OBJECT] = Input;\r\n\r\n\r\n        // You can Add Themes Here\r\n        this.themes = {\r\n            \"Classic\": classic,\r\n            \"Dark\": dark\r\n        }\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener('keydown', event => {\r\n            if(event.key === \"Control\"){\r\n                if(this.state.control === false){\r\n                    this.setState({control: true});\r\n                }\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keyup', event => {\r\n            if(event.key === 'Control'){\r\n                this.setState({control: false});\r\n            }\r\n        });\r\n    }\r\n\r\n    onThemeChange = e => {\r\n        this.setState({\r\n            schemaTheme: e.target.value\r\n        }, () => {\r\n            localStorage.setItem('theme', this.state.schemaTheme);\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const types = this.props.model.types\r\n            .filter(this.filter)\r\n            .sort((type1, type2) => -type1.kind.localeCompare(type2.kind))\r\n            .map(type => createElement(this.types[type.kind],{\r\n                model: type,\r\n                key: type.name,\r\n                control: this.state.control,\r\n                pattern: this.state.pattern,\r\n                theme: this.themes[this.state.schemaTheme]\r\n        }, null));\r\n\r\n        const themeOptions = Object.keys(this.themes).map(name => <option key={name}>{name}</option>);\r\n\r\n        return (<div className={this.themes[this.state.schemaTheme].plainTextColor + \" \" + styles.container + \" \" + this.themes[this.state.schemaTheme].mainContainer}>\r\n                    <div className={styles.panel}>\r\n                        <div className={styles.panelHeader}>\r\n                            <input type={'text'} onChange={this.searchInputChangeHandler} value={this.state.pattern} placeholder={'Search'}/>\r\n                            <select onChange={this.onThemeChange} value={this.state.schemaTheme}>\r\n                                {themeOptions}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div>\r\n                                <input type={'checkbox'}\r\n                                       onChange={e => this.handleCheck(e, \"introspection\")}/> introspection types\r\n                            </div>\r\n                            <div>\r\n                                <input type={'checkbox'}\r\n                                       onChange={e => this.handleCheck(e, TypeKind.SCALAR)}\r\n                                       checked={this.state[TypeKind.SCALAR]}/> scalars\r\n                            </div>\r\n                            <div>\r\n                                <input type={'checkbox'}\r\n                                       onChange={e => this.handleCheck(e, TypeKind.ENUM)}\r\n                                       checked={this.state[TypeKind.ENUM]}/> enums\r\n                            </div>\r\n                            <div>\r\n                                <input type={'checkbox'}\r\n                                       onChange={e => this.handleCheck(e, TypeKind.OBJECT)}\r\n                                       checked={this.state[TypeKind.OBJECT]}/> objects\r\n                            </div>\r\n                            <div>\r\n                                <input type={'checkbox'}\r\n                                       onChange={e => this.handleCheck(e, TypeKind.UNION)}\r\n                                       checked={this.state[TypeKind.UNION]}/> unions\r\n                            </div>\r\n                            <div>\r\n                                <input type={'checkbox'}\r\n                                       onChange={e => this.handleCheck(e, TypeKind.INTERFACE)}\r\n                                       checked={this.state[TypeKind.INTERFACE]}/> interfaces\r\n                            </div>\r\n                            <div>\r\n                                <input type={'checkbox'}\r\n                                       onChange={e => this.handleCheck(e, TypeKind.INPUT_OBJECT)}\r\n                                       checked={this.state[TypeKind.INPUT_OBJECT]}/> inputs\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {types}\r\n                </div>);\r\n    }\r\n\r\n    searchInputChangeHandler = e => {\r\n        if(/^[a-z_]+$/i.test(e.target.value) || e.target.value === ''){\r\n            this.setState({pattern: e.target.value});\r\n        }\r\n\r\n    }\r\n\r\n    handleCheck(e, typeKind){\r\n        this.setState({[typeKind] : e.target.checked});\r\n    }\r\n\r\n    filter = type => {\r\n        let ans = true;\r\n        if(!this.state['introspection']){\r\n           ans = type.name.substr(0,2) !== '__';\r\n        }\r\n\r\n        ans = ans && this.filterCheck(type, TypeKind.ENUM);\r\n        ans = ans && this.filterCheck(type, TypeKind.SCALAR);\r\n        ans = ans && this.filterCheck(type, TypeKind.UNION);\r\n        ans = ans && this.filterCheck(type, TypeKind.INTERFACE);\r\n        ans = ans && this.filterCheck(type, TypeKind.INPUT_OBJECT);\r\n        ans = ans && this.filterCheck(type, TypeKind.OBJECT);\r\n\r\n        return ans;\r\n    }\r\n\r\n    filterCheck(type, kind){\r\n        if(!this.state[kind]){\r\n            return type.kind !== kind;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport InputParameter from \"../InputParameter/InputParameter\";\r\n\r\nexport default class InputParameterList extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.counter = 0;\r\n\r\n        this.state = {\r\n            elems: [{\r\n                key: ++this.counter,\r\n                model: this.props.model\r\n            }]\r\n        }\r\n\r\n        this.args = []\r\n    }\r\n\r\n    handleClick = (id, i, active) => {\r\n        if(active){\r\n            this.setState({\r\n                elems: this.state.elems.slice(0, i).concat(this.state.elems.slice(i+1))\r\n            })\r\n\r\n            this.args = this.args.slice(0, i).concat(this.args.slice(i+1))\r\n        }else{\r\n            const arr = this.state.elems.slice()\r\n            arr.push({\r\n                key: ++this.counter,\r\n                model: this.props.model\r\n            })\r\n\r\n            this.args.push({})\r\n\r\n            this.setState({\r\n                elems: arr,\r\n            })\r\n        }\r\n    }\r\n\r\n    receiveFromChild = (args, i) => {\r\n        if(args[Object.keys(args)[0]] === null) {\r\n            this.args = this.args.slice(0, i).concat(this.args.slice(i))\r\n        }else{\r\n            if(Object.keys(args).length !== 0){\r\n                this.args[i] = {...this.args[i], ...args}\r\n            }\r\n        }\r\n\r\n        this.props.receiver(this.args)\r\n    }\r\n\r\n    render(){\r\n        const inputs = this.state.elems.map((elem,i) => <InputParameter model={{type:elem.model, name: i}}\r\n                                                                          typeDict={this.props.typeDict}\r\n                                                                          receiver={this.receiveFromChild}\r\n                                                                          clickHandler={this.handleClick}\r\n                                                                          key={elem.key}\r\n                                                                          index={i}\r\n                                                                          _key={elem.key}\r\n        />);\r\n\r\n        return (<div>\r\n            {inputs}\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from './InputParameter.module.css'\r\nimport {TypeKind} from \"graphql\";\r\nimport InputParameterList from \"../inputParameterList/InputParameterList\";\r\n\r\nexport default class InputParameter extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: false,\r\n        }\r\n\r\n        this.inputs = {}\r\n    }\r\n\r\n    handleClick = e => {\r\n        this.props.clickHandler(this.props._key, this.props.index, this.state.active);\r\n\r\n        let value = this.getTypeKindRecursively(this.props.model.type) === TypeKind.INPUT_OBJECT ? {} : \"\"\r\n        if(this.state.active){\r\n            value = null;\r\n        }\r\n\r\n        let model = {[this.props.model.name]: value};\r\n        if(this.props.root){\r\n            model = {args: model}\r\n        }\r\n        this.props.receiver(model, this.props.index);\r\n\r\n        this.setState({\r\n            active: !this.state.active,\r\n        })\r\n    }\r\n\r\n    getTypeNameRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeNameRecursively(type.ofType)\r\n        }\r\n\r\n        return type.name;\r\n    }\r\n\r\n    getTypeKindRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeKindRecursively(type.ofType)\r\n        }\r\n\r\n        return type.kind;\r\n    }\r\n\r\n    receiveFromChild = (model) => {\r\n\r\n        if(this.props.listElem){\r\n            this.props.receiver(model, this.props.index);\r\n            return;\r\n        }\r\n\r\n        this.inputs = {...this.inputs, ...model};\r\n        if(Array.isArray(model)){\r\n            this.inputs = model;\r\n        }\r\n        let result = {[this.props.model.name]: this.inputs};\r\n\r\n        if(this.props.root){\r\n            result = {args: result};\r\n        }\r\n\r\n        this.props.receiver(result, this.props.index);\r\n    }\r\n\r\n    isListObject(type){\r\n        switch (type.kind) {\r\n            case TypeKind.NON_NULL:\r\n                return this.isListObject(type.ofType)\r\n            case TypeKind.LIST:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    getListElemTypeName(type){\r\n        switch (type.kind) {\r\n            case TypeKind.NON_NULL:\r\n                return this.getListElemTypeName(type.ofType);\r\n            case TypeKind.LIST:\r\n                return this.getTypeNameRecursively(type.ofType);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    renderInputObjects(){\r\n        if(this.isListObject(this.props.model.type)){\r\n            return <InputParameter model={this.props.typeDict[this.getListElemTypeName(this.props.model.type)]}\r\n                                   typeDict={this.props.typeDict}\r\n                                   receiver={this.receiveFromChild}\r\n                                   clickHandler={()=>{}}\r\n                                   listElem={true}\r\n                                   name={this.props.model.name}\r\n            />\r\n\r\n        }else if(this.getTypeKindRecursively(this.props.model.type) === TypeKind.INPUT_OBJECT){\r\n\r\n            return this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)].inputFields.map(field =>\r\n                        <InputParameter key={field.name}\r\n                                        model={field}\r\n                                        typeDict={this.props.typeDict}\r\n                                        receiver={this.receiveFromChild}\r\n                                        clickHandler={()=>{}}\r\n                        />\r\n                    )\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getScalarType(model){\r\n        if(model.kind !== TypeKind.SCALAR){\r\n            model = model.ofType\r\n        }\r\n        switch (model.name) {\r\n            case \"Int\":\r\n            case \"Integer\":\r\n            case \"Float\":\r\n                return \"number\";\r\n            case \"String\":\r\n                return \"string\";\r\n            default:\r\n                return \"string\"\r\n        }\r\n    }\r\n\r\n    renderInputField(){\r\n        if(this.state.active && (this.props.model.type.kind === TypeKind.SCALAR ||\r\n            (this.props.model.type.kind === TypeKind.NON_NULL && this.props.model.type.ofType.kind === TypeKind.SCALAR))){\r\n\r\n            const scalarType = this.getScalarType(this.props.model.type);\r\n            let markup = null;\r\n            switch (scalarType) {\r\n                case \"number\":\r\n                    markup = <input type={'number'} className={styles.input} onChange={this.handleChange}/>;\r\n                    break;\r\n                case \"string\":\r\n                    markup = <input type={'text'} className={styles.input} onChange={this.handleChange}/>;\r\n                    break;\r\n                case \"bool\":\r\n                    break;\r\n            }\r\n\r\n            return <span >\r\n                {markup}\r\n            </span>\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        let value = e.target.value;\r\n        if(this.getScalarType(this.props.model.type) === \"number\"){\r\n            value = parseInt(value);\r\n        }\r\n        let model = {[this.props.model.name]: value};\r\n        if(this.props.root){\r\n            model = {args: model}\r\n        }\r\n        this.props.receiver(model, this.props.index);\r\n    }\r\n\r\n    render() {\r\n        if(this.props.listElem){\r\n            return <InputParameterList model={this.props.model}\r\n                                       typeDict={this.props.typeDict}\r\n                                       receiver={this.receiveFromChild}\r\n                                       name={this.props.name}\r\n            />\r\n        }else{\r\n            const isListContainer = this.isListObject(this.props.model.type)\r\n\r\n            return (<div className={styles.container} style={{marginLeft: '2em'}}>\r\n                        <button onClick={this.handleClick} className={styles.button}>{this.state.active ? \"-\" : \"+\"}</button>\r\n                        <span className={this.state.active ? styles.active : ''}>\r\n                            {this.props.model.name}: {' '}\r\n                        </span>\r\n                        {this.renderInputField()}\r\n                        {isListContainer && '['}\r\n                        <span style={{marginLeft: '3px'}} className={styles.type}>\r\n                            {this.getTypeNameRecursively(this.props.model.type)}\r\n                        </span>\r\n                        {isListContainer && ']'}\r\n                        {this.props.model.type.kind === TypeKind.NON_NULL && <span className={styles.required}>!</span>}\r\n                        {this.state.active && this.renderInputObjects()}\r\n                    </div>);\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./DynamicParameter.module.css\"\r\nimport {TypeKind} from \"graphql\";\r\nimport InputParameter from \"../InputParameter/InputParameter\";\r\n\r\nexport default class DynamicParameter extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            active: false\r\n        }\r\n\r\n        this.field = {fields:{}, args:{}}\r\n    }\r\n\r\n    handleClick = e => {\r\n        let key = {fields: {}, args:{}};\r\n\r\n        if(this.state.active){\r\n            this.field = {fields: {}, args:{}}\r\n            this.props.receiver({\r\n                fields: {\r\n                    [this.props.model.name]: null\r\n                },\r\n                args: {}\r\n            });\r\n        }else{\r\n            this.props.receiver({\r\n                fields: {\r\n                    [this.props.model.name]: key\r\n                },\r\n                args: {}\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            active: !this.state.active\r\n        })\r\n    }\r\n\r\n    receiveFromChild = fields => {\r\n        this.field.fields = {...this.field.fields, ...fields.fields};\r\n        this.field.args = {...this.field.args, ...fields.args};\r\n\r\n        this.props.receiver({\r\n            fields: {\r\n                [this.props.model.name]: this.field\r\n            },\r\n            args: {}\r\n        });\r\n    }\r\n\r\n    getTypeNameRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeNameRecursively(type.ofType)\r\n        }\r\n\r\n        return type.name;\r\n    }\r\n\r\n    getTypeKindRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeKindRecursively(type.ofType)\r\n        }\r\n\r\n        return type.kind;\r\n    }\r\n\r\n    renderFields(){\r\n        if(this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)].fields === null){\r\n            return null;\r\n        }\r\n\r\n        return this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)].fields.map(field =>\r\n            <DynamicParameter key={field.name}\r\n                              model={field}\r\n                              typeDict={this.props.typeDict}\r\n                              tab={2}\r\n                              receiver={this.receiveFromChild}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderArgs(){\r\n        if(!this.props.model.args?.length){\r\n            return null;\r\n        }\r\n\r\n        return this.props.model.args.map(arg =>\r\n            <InputParameter key={arg.name}\r\n                            model={arg}\r\n                            typeDict={this.props.typeDict}\r\n                            receiver={this.receiveFromChild}\r\n                            clickHandler={()=>{}}\r\n                            root={true}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const type = this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)];\r\n        const fieldCount = type.fields?.length;\r\n        const argCount = this.props.model.args?.length;\r\n\r\n        return (<div style={{marginLeft: `${this.props.tab}em`}} className={styles.container}>\r\n                    <button onClick={this.handleClick} className={styles.button}>{this.state.active ? \"-\" : \"+\"}</button>\r\n                    <span className={this.state.active ? styles.active : ''}>\r\n                        {this.props.model.name}\r\n                    </span>\r\n                    {(this.state.active && argCount > 0) && <div className={styles.inputFieldLabel} style={{marginLeft: '1em'}}>Input Fields: </div>}\r\n                    {this.state.active && this.renderArgs()}\r\n                    {(this.state.active && fieldCount > 0) && <div className={styles.queryFieldLabel} style={{marginLeft: '1em'}}>Result Fields: </div>}\r\n                    {this.state.active && this.renderFields()}\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./QueryField.module.css\"\r\nimport DynamicParameter from \"../dynamicParameter/DynamicParameter\";\r\n\r\nexport default class QueryField extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            queryType: undefined,\r\n            queryFieldType: undefined,\r\n        }\r\n\r\n        this.queryType = {\r\n            query: 'query',\r\n            mutation: 'mutation',\r\n            __schema: '__schema'\r\n        }\r\n\r\n        this.queryObject = {}\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    }\r\n\r\n    renderQuery(){\r\n        switch (this.state.queryType) {\r\n            case this.queryType.query:\r\n                return this.renderFields(this.props.schema.queryType);\r\n            case this.queryType.mutation:\r\n                return this.renderFields(this.props.schema.mutationType);\r\n            case this.queryType.__schema:\r\n                return this.renderFields(this.props.typeDict[\"__Schema\"]);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    renderFields(model){\r\n        return model.fields.map(field => <DynamicParameter key={'q' + field.name}\r\n                                                           model={field}\r\n                                                           typeDict={this.props.typeDict}\r\n                                                           tab={2}\r\n                                                           receiver={this.receiveQueryFields}\r\n                                            />)\r\n    }\r\n\r\n    handleQueryTypeChange = e =>{\r\n        this.setState({\r\n            queryType: e.target.value\r\n        })\r\n    }\r\n\r\n    receiveQueryFields = fields => {\r\n        this.queryObject.fields = {...this.queryObject.fields, ...fields.fields}\r\n        this.queryObject.args = {...this.queryObject.args, ...fields.args}\r\n\r\n        console.log(this.queryObject);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container} >\r\n                {!this.props.connected && <span className={styles.red}>connection not established...</span>}\r\n                {this.props.connected && <div className={styles.textareaContainer} >\r\n\r\n                    <select onChange={this.handleQueryTypeChange} className={styles.select}>\r\n                        <option>Select query type</option>\r\n                        <option>query</option>\r\n                        <option>mutation</option>\r\n                        <option>__schema</option>\r\n                    </select>\r\n                    {this.renderQuery()}\r\n                </div>}\r\n                {this.props.connected && <button className={styles.button} onClick={this.handleClick}>\r\n                    Send Query\r\n                </button>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    serializeJson(args){\r\n        let res = '';\r\n        if(Array.isArray(args)){\r\n            res += '['\r\n            args.forEach((arg, i) => {\r\n                res += this.serializeJson(arg[i]);\r\n                res += i === args.length - 1 ? '' : ','\r\n            });\r\n            res += ']'\r\n        }\r\n        else if(typeof args === 'object'){\r\n            if(args){\r\n                res += '{'\r\n                const keys = Object.keys(args);\r\n                keys.forEach((key, i) => {\r\n                    res += key\r\n                    res += ':';\r\n                    res += this.serializeJson(args[key])\r\n                    res += i === keys.length - 1 ? '' : ','\r\n                })\r\n                res += '}'\r\n            }else{\r\n                return null;\r\n            }\r\n        }else if(typeof args === 'string'){\r\n            res += '\"';\r\n            res += args\r\n            res += '\"';\r\n        }else if(typeof  args === 'number'){\r\n            res += args\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    serializeQuery(queryObject){\r\n        let res = ''\r\n\r\n        const keys = Object.keys(queryObject);\r\n        for(let i=0;i<keys.length;i++){\r\n            const key = keys[i];\r\n            if(queryObject[key] === null){\r\n                continue;\r\n            }\r\n\r\n            const fields = queryObject[key].fields;\r\n            const args = queryObject[key].args;\r\n            let argStr = '';\r\n            if(args && Object.keys(args).length > 0){\r\n                argStr = this.serializeJson(args)\r\n                argStr = '(' + argStr.substr(1,argStr.length-2) + ')';\r\n            }\r\n\r\n            if(!Object.keys(fields).length) {\r\n                res += key + argStr + ' ';\r\n            }\r\n            else if(Object.keys(fields).length === 0){\r\n                return null;\r\n            }else{\r\n                const addition = this.serializeQuery(fields);\r\n                if(!addition){\r\n                    return null;\r\n                }\r\n\r\n                res += key + argStr + '{';\r\n                res += addition + ' ';\r\n                res += '}';\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    handleClick = e => {\r\n        const serializedQuery = this.serializeQuery(this.queryObject.fields);\r\n        if(!serializedQuery){\r\n            alert(\"error message gonna be better\")\r\n            return\r\n        }\r\n\r\n        let query = `${this.state.queryType}{${serializedQuery}}`;\r\n        if(this.state.queryType === this.queryType.__schema){\r\n            query = `{ ${this.state.queryType}{${serializedQuery}}}`;\r\n        }\r\n\r\n        console.log(\"query: \", query);\r\n\r\n        this.props.queryHandler(query);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./JsonDIsplayer.module.css\"\r\nimport jsonTheme from \"../../JsonColorScheme.module.css\"\r\n\r\nexport default class JsonDisplayer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.viewportRef = React.createRef();\r\n        this.data = [];\r\n\r\n        this.refArr = []\r\n    }\r\n\r\n    /*handleScroll = (scrolltop) => {\r\n        if(this.viewportRef.current.scrollTop > this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight){\r\n            const diff = Math.ceil((this.viewportRef.current.scrollTop - (this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight)) / this.props.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex + diff;\r\n            if(newMinIndex + this.props.displayedDataSize <= this.data.length){\r\n                this.setState({\r\n                    minIndex: newMinIndex,\r\n                    scrollTopNumUp: this.state.scrollTopNumUp + diff,\r\n                    scrollTopNumDown: this.state.scrollTopNumDown - diff,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: Math.max(0,this.data.length - this.props.displayedDataSize),\r\n                    scrollTopNumUp: Math.max(this.data.length - this.props.displayedDataSize),\r\n                    scrollTopNumDown: 0,\r\n                });\r\n            }\r\n        }else if(this.viewportRef.current.scrollTop < this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight){\r\n            const diff = Math.ceil((this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight - this.viewportRef.current.scrollTop) / this.props.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex - diff;\r\n            if(newMinIndex >= 0){\r\n                this.setState({\r\n                    minIndex: newMinIndex,\r\n                    scrollTopNumUp: this.state.scrollTopNumUp - diff,\r\n                    scrollTopNumDown: this.state.scrollTopNumDown + diff,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: 0,\r\n                    scrollTopNumUp: 0,\r\n                    scrollTopNumDown: Math.max(0,this.data.length - this.props.displayedDataSize),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getData(offset, length) {\r\n\r\n        const data = []\r\n        let j = 0;\r\n        for(let i=offset;i<length+offset;i++){\r\n            data.push({\r\n                index: j,\r\n                key: i,\r\n                text: i + \") asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd\"\r\n            });\r\n            j++;\r\n        }\r\n\r\n        return data;\r\n    }*/\r\n\r\n    handleScroll = e => {\r\n        this.props.scrollHandler(this.viewportRef.current.scrollTop, this.props.data.length);\r\n    }\r\n\r\n    getData(offset, length) {\r\n\r\n        return this.props.data.slice(offset,length + offset);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.visible){\r\n            return null;\r\n        }\r\n\r\n        const data = this.getData(this.props.minIndex, Math.min(this.props.data.length, this.props.displayedDataSize));\r\n        const upVirtualHeight = this.props.minIndex * this.props.lineHeight;\r\n        const downVirtualHeight = (this.props.data.length - this.props.displayedDataSize - this.props.minIndex) * this.props.lineHeight;\r\n\r\n        return (<div className={styles.container}\r\n                     ref={this.viewportRef}\r\n                     style={{lineHeight: `${this.props.lineHeight}px`}}\r\n                     onScroll={this.handleScroll}\r\n        >\r\n            <div className={styles.virtualPad} style={{height: `${upVirtualHeight}px`, minHeight: `${upVirtualHeight}px`}}/>\r\n\r\n            {data.map(row => <div key={row.key} className={styles.row}>\r\n                <span style={{paddingLeft: `${row.tabs}em`}} />\r\n                {row.markup}\r\n            </div>)}\r\n\r\n            <div className={styles.virtualPad} style={{height: `${downVirtualHeight}px`, minHeight: `${downVirtualHeight}px`}}/>\r\n        </div>)\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Generated.css\"\r\nimport styles from \"./LoadingIcon.module.css\"\r\n\r\nexport default class LoadingIcon extends React.Component{\r\n\r\n    render(){\r\n        if(!this.props.visible){\r\n            return null;\r\n        }\r\n\r\n        return (<div className={styles.container}>\r\n                    <div className=\"loadingio-spinner-rolling-b59357emld\">\r\n                        <div className=\"ldio-4m4wdo0nu9b\">\r\n                            <div/>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from './QueryConsole.module.css'\r\nimport QueryField from \"../queryField/QueryField\";\r\nimport JsonDisplayer from \"../jsonDisplayer/JsonDisplayer\";\r\nimport LoadingIcon from \"../loadingIcon/LoadingIcon\";\r\nimport jsonTheme from \"../../JsonColorScheme.module.css\"\r\n\r\nexport default class QueryConsole extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            consoleWidth: 1200,\r\n            prevX: undefined,\r\n            drag: false,\r\n            minIndex: 0,\r\n        }\r\n\r\n        this.lineHeight = 18;\r\n        this.displayedDataSize = 70;\r\n        this.tolerance = 10;\r\n\r\n        this.addEventListeners();\r\n        this.consoleRef = React.createRef();\r\n        this.containerRef = React.createRef();\r\n    }\r\n\r\n    handleScroll = (scrollTop, dataLength) => {\r\n\r\n        const scrollTopNumUp = this.state.minIndex;\r\n\r\n        if(scrollTop > (this.tolerance + scrollTopNumUp) * this.lineHeight){\r\n            const diff = Math.ceil((scrollTop - (this.tolerance * this.lineHeight + scrollTopNumUp * this.lineHeight)) / this.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex + diff;\r\n            if(newMinIndex + this.displayedDataSize <= dataLength){\r\n                this.setState({\r\n                    minIndex: newMinIndex,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: Math.max(0, dataLength - this.displayedDataSize),\r\n                });\r\n            }\r\n        }else if(scrollTop < this.tolerance * this.lineHeight + scrollTopNumUp * this.lineHeight){\r\n            const diff = Math.ceil((this.tolerance * this.lineHeight + scrollTopNumUp * this.lineHeight - scrollTop) / this.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex - diff;\r\n            if(newMinIndex >= 0){\r\n                this.setState({\r\n                    minIndex: newMinIndex\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: 0\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getRenderModel(tabs, markup){\r\n        return {\r\n            tabs,\r\n            markup,\r\n        }\r\n    }\r\n\r\n    recursiveRenderJsonObject(model, tabs){\r\n        let result = []\r\n\r\n        if(Array.isArray(model)){\r\n            result.push(this.getRenderModel(tabs, \"[\"));\r\n            model.forEach(entry => {\r\n                result = result.concat(this.recursiveRenderJsonObject(entry, tabs + 1))\r\n            })\r\n            result.push(this.getRenderModel(tabs, \"],\"));\r\n        }else if(typeof model === 'object'){\r\n            result.push(this.getRenderModel(tabs, \"{\"));\r\n            result = result.concat(this.recursiveRenderJsonObjectBody(model, tabs + 1))\r\n            result.push(this.getRenderModel(tabs, \"},\"));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    recursiveRenderJsonObjectBody(model, tabs){\r\n\r\n        let result = []\r\n\r\n        if(Array.isArray(model)){\r\n            model.forEach(entry => {\r\n                result = result.concat(this.recursiveRenderJsonObject(entry))\r\n            })\r\n        }else if(typeof model === 'object'){\r\n            Object.keys(model).forEach(key => {\r\n               if(Array.isArray(model[key])){\r\n                   result.push(this.getRenderModel(tabs, <span><span className={jsonTheme.key}>{key}</span>: [</span>/*`${key}: [`*/))\r\n                   model[key].forEach(entry => {\r\n                       result = result.concat(this.recursiveRenderJsonObject(entry, tabs + 1))\r\n                   })\r\n                   result.push(this.getRenderModel(tabs, `],`))\r\n               } else if(model[key] === null || model[key] === undefined){\r\n                   result.push(this.getRenderModel(tabs, <span className={jsonTheme.key}>{key}: <span className={jsonTheme.nullColor}>null</span></span>/*`${key}: null,`*/))\r\n               }else if(typeof model[key] === 'object'){\r\n                   result.push(this.getRenderModel(tabs, <span><span className={jsonTheme.key}>{key}</span>: {'{'}</span>/*`${key}: {`*/))\r\n                   result = result.concat(this.recursiveRenderJsonObjectBody(model[key], tabs + 1))\r\n                   result.push(this.getRenderModel(tabs, `},`))\r\n               }else if(typeof model[key] === 'number'){\r\n                   result.push(this.getRenderModel(tabs, <span className={jsonTheme.key}>{key}: <span className={jsonTheme.numValue}>{model[key]}</span></span>/*`${key}: ${model[key]}`*/))\r\n               }else{\r\n                   result.push(this.getRenderModel(tabs, <span className={jsonTheme.key}>{key}: <span className={jsonTheme.numValue}>{'\"'}{model[key]}{'\"'}</span></span>/*`${key}: \"${model[key]}\"`*/))\r\n               }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    recursiveRenderJson(model){\r\n\r\n        return this.recursiveRenderJsonObject(model, 0).map((entry, i) => {\r\n            return {\r\n                key: i,\r\n                markup: entry.markup,\r\n                tabs: entry.tabs,\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div className={styles.container} ref={this.containerRef}>\r\n                    <div className={styles.queryContainer} style={{width: `${this.state.consoleWidth}px`}} ref={this.consoleRef}>\r\n                        <QueryField queryHandler={this.props.queryHandler}\r\n                                    schema={this.props.schema}\r\n                                    typeDict={this.props.typeDict}\r\n                                    connected={this.props.connected}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.handle} onMouseDown={this.handleMouseDown}>\r\n                        <div className={styles.handleVision}>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.resultContainer} style={{width: `${window.innerWidth - this.state.consoleWidth}px`}}>\r\n                        <JsonDisplayer data={this.recursiveRenderJson(this.props.result)}\r\n                                       visible={!this.props.loading}\r\n                                       lineHeight={18}\r\n                                       tolerance={10}\r\n                                       displayedDataSize={70}\r\n                                       scrollHandler={this.handleScroll}\r\n                                       minIndex={this.state.minIndex}\r\n                        />\r\n                        <LoadingIcon visible={this.props.loading}/>\r\n                    </div>\r\n                </div>);\r\n    }\r\n\r\n    handleMouseDown = e => {\r\n        this.setState({drag: true, prevX: e.clientX});\r\n    }\r\n\r\n\r\n    handleMouseUp = e => {\r\n        this.setState({drag: false, prevX: undefined});\r\n    }\r\n\r\n    moveHandler = e => {\r\n        if(this.state.drag){\r\n            const diff = e.clientX - this.state.prevX;\r\n            const newConsoleWidth = this.state.consoleWidth + diff;\r\n            this.setState({prevX: e.clientX, consoleWidth: newConsoleWidth})\r\n\r\n        }\r\n    }\r\n\r\n    handleResize = e => {\r\n        this.setState({consoleWidth: this.consoleRef.current.getBoundingClientRect().width})\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n        document.addEventListener(\"mousemove\", this.moveHandler);\r\n        window.addEventListener('resize',this.handleResize);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from './Dropdown.module.css'\r\nimport defaultIcon from '../../assets/icons/graphqlIcon.png'\r\n\r\n\r\nfunction MenuItem(props){\r\n\r\n    const logo = props.model.info?.logo\r\n\r\n    return (<div className={styles.menuItemTitleContainer}\r\n                 onClick={() => props.onCLick(props.model.url, props.model.info.title)}\r\n            >\r\n                <div className={styles.selectedIconContainer}>\r\n                    <img className={styles.selectedIcon} src={defaultIcon} />\r\n                </div>\r\n                <div className={styles.selectedText} >\r\n                    {props.model.info.title}\r\n                </div>\r\n            </div>);\r\n}\r\n\r\nexport default class Dropdown extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: false,\r\n            apiTitle: \"Choose Api\",\r\n        }\r\n    }\r\n\r\n    clickHandler = e => {\r\n        this.setState({\r\n            active: !this.state.active\r\n        })\r\n    }\r\n\r\n    hideBar = e => {\r\n        this.setState({\r\n            active: false,\r\n        })\r\n    }\r\n\r\n    getCorrectSvgPath() {\r\n        if(this.state.active){\r\n            return <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" className={styles.iconColor}/>\r\n        }\r\n\r\n        return <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" className={styles.iconColor}/>\r\n    }\r\n\r\n    handleItemClick = (url, title) => {\r\n        this.hideBar({});\r\n        this.props.changeHandler(url);\r\n\r\n        this.setState({\r\n            apiTitle: title\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const apis = this.props.apis.map(api => <MenuItem key={api.info.title}\r\n                                                          model={api}\r\n                                                          onCLick={this.handleItemClick}\r\n        />);\r\n\r\n        return (<div className={styles.container + ' ' + this.props.className} onMouseLeave={this.hideBar}>\r\n                    <div className={styles.titleContainer} onClick={this.clickHandler} >\r\n                        <div className={styles.selectedIconContainer}>\r\n                            <img className={styles.selectedIcon} src={defaultIcon} alt={'default icon'}/>\r\n                        </div>\r\n                        <div className={styles.selectedText}>\r\n                            {this.state.apiTitle}\r\n                        </div>\r\n                        <div className={styles.svgContainer}>\r\n                            <svg className={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" height=\"35\" viewBox=\"0 0 24 24\" width=\"35\" >\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                {this.getCorrectSvgPath()}\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n\r\n                {this.state.active && <div className={styles.menuContainer}>\r\n                        {apis}\r\n                </div>}\r\n                </div>);\r\n\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Graphite.module.css\"\r\nimport  {introspectionQuery} from \"../../utils/introspection/introspection\";\r\nimport Schema from \"../schema/Schema\";\r\nimport QueryConsole from \"../queryConsole/QueryConsole\";\r\nimport apis from '../../utils/apis.json'\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\n\r\nexport default class Graphite extends React.Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            schemaModel: {\r\n                types: []\r\n            },\r\n            addressValue: 'http://localhost:5000/graphql',\r\n            drag: false,\r\n            queryWidth: 1200,\r\n            queryResult: '',\r\n            loading: false,\r\n            typeDict: {},\r\n            connectionEstablished: false,\r\n            schemaVisibility: false,\r\n            prevX: undefined,\r\n            schemaWidth:300,\r\n        };\r\n\r\n        this.addEventListeners();\r\n        this.queryWindowRef = React.createRef();\r\n\r\n        console.log(apis);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSchema(this.state.addressValue);\r\n    }\r\n\r\n    fetchSchema = (addressValue) => {\r\n        fetch(addressValue, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                query: introspectionQuery\r\n            }),\r\n        }).then(res => {\r\n            if(res.ok){\r\n                return res.json();\r\n            }\r\n            throw res.statusText;\r\n        }).then(obj => {\r\n            const dict = {};\r\n            obj.data.__schema.types.forEach(type => {\r\n                dict[type.name] = type;\r\n            })\r\n            this.setState({\r\n                schemaModel: obj.data.__schema,\r\n                typeDict: dict,\r\n                connectionEstablished: true,\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    sendQuery = query => {\r\n        this.setState({loading: true})\r\n        fetch(this.state.addressValue, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                query: query.replace(/\\s\\s+/g, ' ')\r\n            })\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(obj => {\r\n            if(obj.errors !== undefined){\r\n                this.handleError(obj.errors);\r\n            }else if(obj.data !== undefined){\r\n                this.handleData(obj.data);\r\n            }\r\n        }).catch(error => {\r\n            this.handleError({message: error.message});\r\n        });\r\n    }\r\n\r\n    handleError(errors){\r\n        this.setState({queryResult: errors, loading: false})\r\n    }\r\n\r\n    handleData(data){\r\n        this.setState({queryResult: data, loading: false})\r\n    }\r\n\r\n    inputChanged = (event) => {\r\n        this.setState({\r\n            addressValue: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleChange = url => {\r\n        this.fetchSchema(url);\r\n    }\r\n\r\n    render() {\r\n        return (<div className={styles.container}>\r\n                    <div className={styles.ideContainer} ref={this.queryWindowRef} >\r\n                        <div className={styles.addressContainer}>\r\n                            <div>\r\n                                <input type={'text'} value={this.state.addressValue} onChange={this.inputChanged}/>\r\n                                <button onClick={this.fetchSchema}>Fetch</button>\r\n                            </div>\r\n\r\n                            <Dropdown className={styles.dropDown} apis={apis} changeHandler={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <div className={styles.queryContainer}>\r\n                            <QueryConsole queryWidth={this.state.queryWidth}\r\n                                          queryHandler={this.handleQuery}\r\n                                          result={this.state.queryResult}\r\n                                          loading={this.state.loading}\r\n                                          schema={this.state.schemaModel}\r\n                                          typeDict={this.state.typeDict}\r\n                                          connected={this.state.connectionEstablished}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.schemaContainer}>\r\n                        <div className={styles.buttonContainer}>\r\n                            <div className={this.state.schemaVisibility ? styles.schemaButtonActive : styles.schemaButton} onClick={this.handleSchemaClick}>\r\n                                <svg className={styles.schemaSvg} xmlns=\"http://www.w3.org/2000/svg\" height=\"50\" viewBox=\"0 0 24 24\" width=\"50\">\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                    <path d=\"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z\" fill={'white'}/>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.handler} style={{display: (this.state.schemaVisibility ? 'flex' : 'none')}}>\r\n                            <div className={styles.hitArea} onMouseDown={this.downHandler}>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.contentContainer}\r\n                             style={{\r\n                                 display: (this.state.schemaVisibility ? 'flex' : 'none'),\r\n                                 width: `${this.state.schemaWidth}px`\r\n                             }}>\r\n                            <Schema model={this.state.schemaModel}/>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n    }\r\n\r\n    handleSchemaClick = (e) => {\r\n        this.setState({\r\n            schemaVisibility: !this.state.schemaVisibility,\r\n        })\r\n    }\r\n\r\n    handleQuery = query => {\r\n        this.sendQuery(query)\r\n    }\r\n\r\n    downHandler = e => {\r\n        this.setState({\r\n            drag: true,\r\n            prevX: e.clientX,\r\n        });\r\n    }\r\n\r\n    upHandler = e => {\r\n        this.setState({\r\n            drag: false,\r\n            prevX: undefined\r\n        });\r\n    }\r\n\r\n    moveHandler = e => {\r\n        if(this.state.drag){\r\n            const diff = e.clientX - this.state.prevX;\r\n            this.setState({\r\n                schemaWidth: this.state.schemaWidth - diff,\r\n                prevX: e.clientX\r\n            })\r\n        }\r\n    }\r\n\r\n    handleResize = e => {\r\n\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener(\"mousemove\", this.moveHandler);\r\n        document.addEventListener(\"mouseup\", this.upHandler);\r\n    }\r\n}\r\n","import { gql } from 'graphql.macro';\r\n\r\nexport const queryObject1 = gql`\r\n    query {\r\n        __schema{\r\n            types{\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const queryObject = gql`\r\n    \r\n    query {\r\n        __schema{\r\n            types{\r\n                ...Type\r\n            }\r\n            queryType{\r\n                ...Type\r\n            }\r\n            mutationType{\r\n                ...Type\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    fragment Type on __Type{\r\n        kind\r\n        name\r\n        description\r\n        fields{\r\n            ...Field\r\n        }\r\n        interfaces{\r\n            ...RecursiveType\r\n        }\r\n        possibleTypes{\r\n            name\r\n            kind\r\n        }\r\n        enumValues{\r\n            name,\r\n            description\r\n        }\r\n        inputFields{\r\n            name\r\n            description\r\n            defaultValue\r\n            type{\r\n                ...RecursiveType\r\n            }\r\n        }\r\n    }\r\n    \r\n    fragment Field on __Field{\r\n        name\r\n        description\r\n        type{\r\n            ...RecursiveType\r\n        }\r\n        args{\r\n            name\r\n            description\r\n            type{\r\n                ...RecursiveType\r\n            }\r\n            defaultValue\r\n        }\r\n    }\r\n    \r\n    fragment RecursiveType on __Type{\r\n        name\r\n        kind\r\n        ofType{\r\n            name\r\n            kind\r\n            ofType{\r\n                name\r\n                kind\r\n                ofType{\r\n                    name\r\n                    kind\r\n                    ofType{\r\n                        name\r\n                        kind\r\n                        ofType{\r\n                            name\r\n                            kind\r\n                            ofType{\r\n                                name\r\n                                kind\r\n                                ofType{\r\n                                    name\r\n                                    kind\r\n                                    ofType{\r\n                                        name\r\n                                        kind\r\n                                        ofType{\r\n                                            name\r\n                                            kind\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const introspectionQuery = queryObject.loc.source.body;\r\n","import React from 'react';\r\nimport Graphite from \"../graphite/Graphite\";\r\n\r\nfunction App() {\r\n    return <Graphite/>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}