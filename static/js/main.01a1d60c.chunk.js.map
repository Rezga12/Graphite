{"version":3,"sources":["CodeColorScheme.module.css","JsonColorScheme.module.css","components/InputParameter/InputParameter.module.css","components/typeLabel/TypeLabel.module.css","components/queryConsole/QueryConsole.module.css","components/queryField/QueryField.module.css","components/dynamicParameter/DynamicParameter.module.css","components/graphite/Graphite.module.css","components/jsonDisplayer/JsonDIsplayer.module.css","components/schema/Schema.module.css","components/loadingIcon/LoadingIcon.module.css","components/types/scalar/Scalar.module.css","Public.module.css","components/marker/Marker.js","components/typeLabel/TypeLabel.js","components/field/Field.js","utils/UtilMethods.js","components/types/object/Object.js","components/types/scalar/Scalar.js","components/types/union/Union.js","components/types/enum/Enum.js","components/types/input/Input.js","components/schema/Schema.js","components/inputParameterList/InputParameterList.js","components/InputParameter/InputParameter.js","components/dynamicParameter/DynamicParameter.js","components/queryField/QueryField.js","components/jsonDisplayer/JsonDisplayer.js","components/loadingIcon/LoadingIcon.js","components/queryConsole/QueryConsole.js","components/graphite/Graphite.js","utils/introspection/introspection.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Marker","index","this","props","word","indexOf","pattern","leftPart","substr","middlePart","length","rightPart","className","colorTheme","marker","React","Component","TypeLabel","handleClick","control","console","log","name","type","styles","plain","controlClass","underline","kind","TypeKind","NON_NULL","getTypeName","ofType","LIST","onClick","Field","args","result","argObjectsOneLine","map","arg","i","key","paramName","model","argObjectsMultipleLines","tab","typeField","getArgs","typeLabelContainsPattern","includes","inputFieldCheck","fields","reduce","currField","fullTypeContainsPattern","interfaces","prevType","currType","possibleTypes","inputFields","enumValues","res","ObjectType","field","_interface","INTERFACE","render","typeContainer","keyword","Scalar","Union","Enum","value","enumField","Input","InputParameterList","typeDict","receiver","InputParameter","e","setState","active","state","receiveFromChild","getTypeNameRecursively","getTypeKindRecursively","getListElemType","isListObject","getListElemTypeName","listElem","INPUT_OBJECT","input","container","style","marginLeft","button","renderInputField","required","renderInputObjects","DynamicParameter","fieldCount","argCount","inputFieldLabel","renderArgs","queryFieldLabel","renderFields","QueryField","handleQueryTypeChange","queryType","target","receiveQueryFields","queryObject","serializedQuery","serializeQuery","query","__schema","queryHandler","alert","undefined","queryFieldType","mutation","prevProps","prevState","snapshot","schema","mutationType","connected","red","textareaContainer","onChange","select","renderQuery","keys","Object","addition","JsonDisplayer","handleScroll","scrollHandler","viewportRef","current","scrollTop","data","createRef","refArr","offset","slice","visible","getData","minIndex","Math","min","displayedDataSize","upVirtualHeight","lineHeight","downVirtualHeight","ref","onScroll","virtualPad","height","minHeight","row","paddingLeft","tabs","markup","LoadingIcon","QueryConsole","dataLength","scrollTopNumUp","tolerance","diff","ceil","newMinIndex","max","handleMouseDown","drag","prevX","clientX","handleMouseUp","moveHandler","newConsoleWidth","consoleWidth","handleResize","consoleRef","getBoundingClientRect","width","addEventListeners","containerRef","Array","isArray","push","getRenderModel","forEach","entry","concat","recursiveRenderJsonObject","recursiveRenderJsonObjectBody","jsonTheme","nullColor","numValue","queryContainer","handle","onMouseDown","handleVision","resultContainer","window","innerWidth","recursiveRenderJson","loading","document","addEventListener","Graphite","fetchSchema","event","fetch","addressValue","method","headers","body","JSON","stringify","then","ok","json","statusText","obj","dict","types","schemaModel","connectionEstablished","catch","error","sendQuery","replace","errors","handleError","handleData","message","inputChanged","handleQuery","downHandler","upHandler","newQueryWidth","queryWidth","queryWindowRef","queryResult","ideContainer","addressContainer","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01a1d60c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyword\":\"CodeColorScheme_keyword__2JAJs\",\"typeField\":\"CodeColorScheme_typeField__SRGxC\",\"typeContainer\":\"CodeColorScheme_typeContainer__X3Ocy\",\"typeLabel\":\"CodeColorScheme_typeLabel__1NvPN\",\"typeLabelHover\":\"CodeColorScheme_typeLabelHover__35A6y\",\"enumField\":\"CodeColorScheme_enumField__1oUNg\",\"paramName\":\"CodeColorScheme_paramName__24hvk\",\"tab\":\"CodeColorScheme_tab__3205o\",\"marker\":\"CodeColorScheme_marker__3v7Hx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"JsonColorScheme_key__2c7bN\",\"stringValue\":\"JsonColorScheme_stringValue__1Jv98\",\"numValue\":\"JsonColorScheme_numValue__73fiz\",\"nullColor\":\"JsonColorScheme_nullColor__dJs1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InputParameter_container__101sk\",\"button\":\"InputParameter_button__SODnS\",\"active\":\"InputParameter_active__2BM1N\",\"type\":\"InputParameter_type__2K3eN\",\"required\":\"InputParameter_required__1VZNF\",\"input\":\"InputParameter_input__2sbrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"underline\":\"TypeLabel_underline__2wqor\",\"plain\":\"TypeLabel_plain__2uKyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QueryConsole_container__lErpB\",\"queryContainer\":\"QueryConsole_queryContainer__1W3tY\",\"handle\":\"QueryConsole_handle__sFe0R\",\"handleVision\":\"QueryConsole_handleVision__1xlCe\",\"resultContainer\":\"QueryConsole_resultContainer__3zmlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QueryField_container__3yVqZ\",\"textareaContainer\":\"QueryField_textareaContainer__3MpWy\",\"button\":\"QueryField_button__2JO2z\",\"fieldRow\":\"QueryField_fieldRow__h1wjU\",\"select\":\"QueryField_select__kT7oZ\",\"tab\":\"QueryField_tab__f8skJ\",\"red\":\"QueryField_red__35WhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DynamicParameter_active__39rkZ\",\"container\":\"DynamicParameter_container__x9yr_\",\"button\":\"DynamicParameter_button__1Wk8p\",\"queryFieldLabel\":\"DynamicParameter_queryFieldLabel__3vvKq\",\"inputFieldLabel\":\"DynamicParameter_inputFieldLabel__1hryA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Graphite_container__NIZ0a\",\"ideContainer\":\"Graphite_ideContainer__3rBII\",\"schemaContainer\":\"Graphite_schemaContainer__1QA1W\",\"dragger\":\"Graphite_dragger__2EP-H\",\"draggerVisiblePart\":\"Graphite_draggerVisiblePart__3hZah\",\"addressContainer\":\"Graphite_addressContainer__15W09\",\"queryContainer\":\"Graphite_queryContainer__l6xUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"JsonDIsplayer_tab__aqlK5\",\"container\":\"JsonDIsplayer_container__3zhLz\",\"row\":\"JsonDIsplayer_row__tFER2\",\"marker\":\"JsonDIsplayer_marker__3QYIm\",\"virtualPad\":\"JsonDIsplayer_virtualPad__2mM5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Schema_text__2EHZa\",\"container\":\"Schema_container__1rJP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingIcon_container__3g_Ur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scalar\":\"Scalar_scalar__36BvX\",\"name\":\"Scalar_name__1ESj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"undisplayed\":\"Public_undisplayed__2xQSU\"};","import React from \"react\";\r\nimport colorTheme from \"../../CodeColorScheme.module.css\"\r\n\r\nexport default class Marker extends React.Component{\r\n    render() {\r\n\r\n        const index = this.props.word.indexOf(this.props.pattern);\r\n        if(index === -1){\r\n            return this.props.word;\r\n        }\r\n\r\n        const leftPart = this.props.word.substr(0,index);\r\n        const middlePart = this.props.word.substr(index, this.props.pattern.length);\r\n        const rightPart = this.props.word.substr(index + this.props.pattern.length);\r\n\r\n        return <label>{leftPart}<label className={colorTheme.marker}>{middlePart}</label>{rightPart}</label>\r\n    }\r\n}","import React from \"react\";\r\nimport styles from './TypeLabel.module.css'\r\nimport {TypeKind} from \"graphql\";\r\nimport Marker from \"../marker/Marker\";\r\n\r\nexport default class TypeLabel extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.name = \"\";\r\n    }\r\n\r\n    handleClick = () => {\r\n        if(this.props.control){\r\n            console.log(this.name);\r\n        }\r\n    }\r\n\r\n    getTypeName(type){\r\n        if(type === null){\r\n            return <label className={styles.plain}>unknown</label>;\r\n        }\r\n\r\n        const controlClass = this.props.control ? styles.underline : styles.plain;\r\n\r\n        switch (type.kind) {\r\n            case TypeKind.NON_NULL:\r\n                return (<label className={styles.plain}>{this.getTypeName(type.ofType)}!</label>);\r\n            case TypeKind.LIST:\r\n                return (<label className={styles.plain}>[{this.getTypeName(type.ofType)}]</label>);\r\n            default:\r\n                this.name = type.name;\r\n                return <label className={controlClass} onClick={this.handleClick}><Marker word={type.name} pattern={this.props.pattern}/></label>;\r\n        }\r\n    }\r\n\r\n    render(){\r\n       return this.getTypeName(this.props.type);\r\n    }\r\n}","import React from \"react\";\r\nimport colorTheme from \"../../CodeColorScheme.module.css\"\r\nimport TypeLabel from \"../typeLabel/TypeLabel\";\r\nimport Marker from \"../marker/Marker\";\r\n\r\nexport default class Field extends React.Component{\r\n\r\n    getArgs(args){\r\n        const argObjectsOneLine = args.map((arg, i) => <label key={arg.name}>\r\n            <label className={colorTheme.paramName}>{arg.name}</label>:\r\n            <TypeLabel type={this.props.model.type} control={this.props.control} pattern={this.props.pattern}/>{i < (args.length-1) && ', '}\r\n        </label>);\r\n\r\n        const argObjectsMultipleLines = args.map((arg, i) => <label key={arg.name} className={colorTheme.tab}>\r\n            <label className={colorTheme.paramName}>{arg.name}</label>:\r\n            <TypeLabel type={this.props.model.type} control={this.props.control} pattern={this.props.pattern}/>{i < (args.length-1) && ', '} <br/>\r\n        </label>);\r\n        let result;\r\n\r\n        switch (args.length) {\r\n            case 0:\r\n                result = <label />\r\n                break;\r\n            case 1:\r\n            case 2:\r\n                result = <label >\r\n                    ({argObjectsOneLine})\r\n                </label>\r\n                break;\r\n            default:\r\n                result = <label>(\r\n                    <br/>\r\n                    {argObjectsMultipleLines})\r\n                </label>\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        return (<div className={colorTheme.typeField}>\r\n                    <Marker word={this.props.model.name} pattern={this.props.pattern}/>{this.getArgs(this.props.model.args)}:\r\n                    <TypeLabel type={this.props.model.type} control={this.props.control} pattern={this.props.pattern}/>\r\n                </div>);\r\n    }\r\n}","import {TypeKind} from \"graphql\";\r\n\r\nexport function typeLabelContainsPattern(type, pattern){\r\n    if(type.kind !== TypeKind.LIST && type.kind !== TypeKind.NON_NULL){\r\n        return type.name.includes(pattern);\r\n    }\r\n\r\n    return typeLabelContainsPattern(type.ofType, pattern);\r\n}\r\n\r\nfunction inputFieldCheck(fields, pattern){\r\n    return fields.reduce((result, currField) =>\r\n        result ||\r\n        currField.name.includes(pattern) ||\r\n        typeLabelContainsPattern(currField.type, pattern),\r\n        false);\r\n}\r\n\r\nexport function fullTypeContainsPattern(type, pattern){\r\n    let result = type.name.includes(pattern);\r\n\r\n    if(type.interfaces !== null){\r\n        result = type.interfaces.reduce((prevType, currType) => prevType || currType.name.includes(pattern),result);\r\n    }\r\n\r\n    if(type.possibleTypes !== null){\r\n        result = type.possibleTypes.reduce((prevType, currType) => prevType || currType.name.includes(pattern),result);\r\n    }\r\n\r\n    if(type.inputFields !== null){\r\n        result = result || inputFieldCheck(type.inputFields, pattern)\r\n    }\r\n\r\n    if(type.enumValues !== null){\r\n        result = type.enumValues.reduce((prevType, currType) => prevType || currType.name.includes(pattern),result);\r\n    }\r\n\r\n    if(type.fields !== null){\r\n        result = type.fields.reduce((res, currField) =>\r\n            res ||\r\n            currField.name.includes(pattern) ||\r\n            typeLabelContainsPattern(currField.type, pattern) ||\r\n            inputFieldCheck(currField.args, pattern),\r\n            result);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function removeWhitespaceForQuery(query){\r\n    let result = '';\r\n\r\n    for (let i=0;i<query.length;i++){\r\n        if(query[i]){\r\n\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport colorTheme from \"../../../CodeColorScheme.module.css\"\r\nimport Field from \"../../field/Field\";\r\nimport {TypeKind} from \"graphql\";\r\nimport TypeLabel from \"../../typeLabel/TypeLabel\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class ObjectType extends React.Component{\r\n    render(){\r\n        const fields = this.props.model.fields.map(field =>\r\n            <Field model={field} key={field.name} control = {this.props.control} pattern={this.props.pattern}/>\r\n        );\r\n\r\n        let interfaces = []\r\n        if(this.props.model.interfaces !== null){\r\n            interfaces = this.props.model.interfaces.map((_interface,i) =>\r\n                <label key={_interface.name}>\r\n                    <TypeLabel type={_interface} control={this.props.control} pattern={this.props.pattern}/>\r\n                    {i === this.props.model.interfaces.length - 1 ? '' : ', '}\r\n                </label>)\r\n        }\r\n\r\n        let type = this.props.model.kind === TypeKind.INTERFACE ? 'interface' : 'type';\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || type.includes(this.props.pattern);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <div>\r\n                        <label className={colorTheme.keyword}><Marker word={type} pattern={this.props.pattern}/> </label>\r\n                        <Marker word={this.props.model.name} pattern={this.props.pattern}/>\r\n                        {interfaces.length > 0 && <label className={colorTheme.keyword}><Marker word={' implements '} pattern={this.props.pattern}/></label>}\r\n                        {interfaces}\r\n                        {' {'}\r\n                    </div>\r\n                    {fields}\r\n                    <div>{'}'}</div>\r\n                </div>);\r\n    }\r\n}","import React from \"react\";\r\nimport styles from './Scalar.module.css'\r\nimport colorTheme from \"../../../CodeColorScheme.module.css\"\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport publicStyles from \"../../../Public.module.css\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Scalar extends React.Component{\r\n\r\n    render() {\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || 'scalar'.includes(this.props.pattern);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <label className={colorTheme.keyword}><Marker word={'scalar '} pattern={this.props.pattern}/></label>\r\n                    <label className={''}><Marker word={this.props.model.name} pattern={this.props.pattern}/></label>\r\n                </div>);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport TypeLabel from \"../../typeLabel/TypeLabel\";\r\nimport colorTheme from \"../../../CodeColorScheme.module.css\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Union extends React.Component{\r\n    render() {\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || 'union'.includes(this.props.pattern);\r\n\r\n        const possibleTypes = this.props.model.possibleTypes.map((type, i) =>\r\n            <label key={type.name}>\r\n                <TypeLabel type={type} control={this.props.control} pattern={this.props.pattern}/>\r\n                {i === this.props.model.possibleTypes.length - 1 ? '' : ' | '}\r\n            </label>\r\n        );\r\n\r\n        return (!render ? null : <div>\r\n                    <label className={colorTheme.keyword}><Marker word={'union '} pattern={this.props.pattern}/></label>\r\n                    <label className={''}><Marker word={this.props.model.name} pattern={this.props.pattern}/></label>\r\n                    {' = '}\r\n                    {possibleTypes}\r\n                </div>);\r\n    }\r\n}","import React from \"react\";\r\nimport colorTheme from \"../../../CodeColorScheme.module.css\"\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Enum extends React.Component{\r\n    render() {\r\n        const enumValues = this.props.model.enumValues.map(value => <div key={value.name} className={`${colorTheme.enumField} ${colorTheme.typeField}`}>\r\n            <Marker word={value.name} pattern={this.props.pattern}/>\r\n        </div>);\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern) || 'enum'.includes(this.props.pattern);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <label className={colorTheme.keyword}><Marker word={'enum '} pattern={this.props.pattern}/></label>\r\n                        <Marker word={this.props.model.name} pattern={this.props.pattern}/> {'{'}\r\n                        {enumValues}\r\n                    {'}'}\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport colorTheme from \"../../../CodeColorScheme.module.css\"\r\nimport TypeLabel from \"../../typeLabel/TypeLabel\";\r\nimport {fullTypeContainsPattern} from \"../../../utils/UtilMethods\";\r\nimport Marker from \"../../marker/Marker\";\r\n\r\nexport default class Input extends React.Component{\r\n    render() {\r\n\r\n        const render = fullTypeContainsPattern(this.props.model, this.props.pattern)  ||\r\n            'input'.includes(this.props.pattern) ||\r\n            this.props.model.name.includes(this.props.pattern);\r\n\r\n        const fields = this.props.model.inputFields.map(field =>\r\n            <div key={field.name} className={colorTheme.typeField}>\r\n                <label><Marker word={field.name} pattern={this.props.pattern} /></label>{': '}\r\n                <TypeLabel type={field.type} control={this.props.control} pattern={this.props.pattern}/>\r\n            </div>);\r\n\r\n        return (!render ? null : <div className={colorTheme.typeContainer}>\r\n                    <div>\r\n                        <label className={colorTheme.keyword}>\r\n                            <Marker word={'input'} pattern={this.props.pattern}/>\r\n                        </label> <Marker word={this.props.model.name} pattern={this.props.pattern}/>{' {'}\r\n                    </div>\r\n                    <div>{fields}</div>\r\n                    <div>{'}'}</div>\r\n                </div>);\r\n    }\r\n}","import React, {createElement} from 'react'\r\nimport styles from './Schema.module.css'\r\nimport {TypeKind} from \"graphql\";\r\nimport ObjectType from \"../types/object/Object\";\r\nimport Scalar from \"../types/scalar/Scalar\";\r\nimport Union from \"../types/union/Union\";\r\nimport Enum from \"../types/enum/Enum\";\r\nimport Input from \"../types/input/Input\";\r\n\r\nexport default class Schema extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            control: false,\r\n            pattern: '',\r\n        }\r\n\r\n        this.state[TypeKind.OBJECT] = true;\r\n        this.state[TypeKind.SCALAR] = true;\r\n        this.state[TypeKind.INTERFACE] = true;\r\n        this.state[TypeKind.UNION] = true;\r\n        this.state[TypeKind.ENUM] = true;\r\n        this.state[TypeKind.INPUT_OBJECT] = true;\r\n\r\n        this.state['introspection'] = false;\r\n\r\n        this.addEventListeners();\r\n\r\n        this.types = {}\r\n        this.types[TypeKind.OBJECT] = ObjectType;\r\n        this.types[TypeKind.SCALAR] = Scalar;\r\n        this.types[TypeKind.INTERFACE] = ObjectType;\r\n        this.types[TypeKind.UNION] = Union;\r\n        this.types[TypeKind.ENUM] = Enum;\r\n        this.types[TypeKind.INPUT_OBJECT] = Input;\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener('keydown', event => {\r\n            if(event.key === \"Control\"){\r\n                if(this.state.control === false){\r\n                    this.setState({control: true});\r\n                }\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keyup', event => {\r\n            if(event.key === 'Control'){\r\n                this.setState({control: false});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const types = this.props.model.types\r\n            .filter(this.filter)\r\n            .sort((type1, type2) => -type1.kind.localeCompare(type2.kind))\r\n            .map(type => createElement(this.types[type.kind],{\r\n            model: type,\r\n            key: type.name,\r\n            control: this.state.control,\r\n            pattern: this.state.pattern,\r\n        }, null));\r\n\r\n        return (<div className={styles.text + \" \" + styles.container} >\r\n                    <input type={'text'} onChange={this.searchInputChangeHandler} value={this.state.pattern} placeholder={'Search'}/>\r\n                    <div>\r\n                        <div>\r\n                            <input type={'checkbox'}\r\n                                   onChange={e => this.handleCheck(e, \"introspection\")}/> introspection types\r\n                        </div>\r\n                        <div>\r\n                            <input type={'checkbox'}\r\n                                   onChange={e => this.handleCheck(e, TypeKind.SCALAR)}\r\n                                   checked={this.state[TypeKind.SCALAR]}/> scalars\r\n                        </div>\r\n                        <div>\r\n                            <input type={'checkbox'}\r\n                                   onChange={e => this.handleCheck(e, TypeKind.ENUM)}\r\n                                   checked={this.state[TypeKind.ENUM]}/> enums\r\n                        </div>\r\n                        <div>\r\n                            <input type={'checkbox'}\r\n                                   onChange={e => this.handleCheck(e, TypeKind.OBJECT)}\r\n                                   checked={this.state[TypeKind.OBJECT]}/> objects\r\n                        </div>\r\n                        <div>\r\n                            <input type={'checkbox'}\r\n                                   onChange={e => this.handleCheck(e, TypeKind.UNION)}\r\n                                   checked={this.state[TypeKind.UNION]}/> unions\r\n                        </div>\r\n                        <div>\r\n                            <input type={'checkbox'}\r\n                                   onChange={e => this.handleCheck(e, TypeKind.INTERFACE)}\r\n                                   checked={this.state[TypeKind.INTERFACE]}/> interfaces\r\n                        </div>\r\n                        <div>\r\n                            <input type={'checkbox'}\r\n                                   onChange={e => this.handleCheck(e, TypeKind.INPUT_OBJECT)}\r\n                                   checked={this.state[TypeKind.INPUT_OBJECT]}/> inputs\r\n                        </div>\r\n                    </div>\r\n                    {types}\r\n                </div>);\r\n    }\r\n\r\n    searchInputChangeHandler = e => {\r\n        if(/^[a-z_]+$/i.test(e.target.value) || e.target.value === ''){\r\n            this.setState({pattern: e.target.value});\r\n        }\r\n\r\n    }\r\n\r\n    handleCheck(e, typeKind){\r\n        this.setState({[typeKind] : e.target.checked});\r\n    }\r\n\r\n    filter = type => {\r\n        let ans = true;\r\n        if(!this.state['introspection']){\r\n           ans = type.name.substr(0,2) !== '__';\r\n        }\r\n\r\n        ans = ans && this.filterCheck(type, TypeKind.ENUM);\r\n        ans = ans && this.filterCheck(type, TypeKind.SCALAR);\r\n        ans = ans && this.filterCheck(type, TypeKind.UNION);\r\n        ans = ans && this.filterCheck(type, TypeKind.INTERFACE);\r\n        ans = ans && this.filterCheck(type, TypeKind.INPUT_OBJECT);\r\n        ans = ans && this.filterCheck(type, TypeKind.OBJECT);\r\n\r\n        return ans;\r\n    }\r\n\r\n    filterCheck(type, kind){\r\n        if(!this.state[kind]){\r\n            return type.kind !== kind;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}","import InputParameter from \"../InputParameter/InputParameter\";\r\nimport styles from './InputParameterList.module.css'\r\nimport React from \"react\";\r\n\r\nexport default class InputParameterList extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = () => {\r\n        console.log(\"overloaded\");\r\n    }\r\n\r\n    render(){\r\n\r\n        return (<div>\r\n            hmm\r\n            <InputParameter model={{type:this.props.model, name:'0'}}\r\n                            typeDict={this.props.typeDict}\r\n                            receiver={this.props.receiver}\r\n            />\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from './InputParameter.module.css'\r\nimport {TypeKind} from \"graphql\";\r\nimport InputParameterList from \"../inputParameterList/InputParameterList\";\r\n\r\nexport default class InputParameter extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: false,\r\n        }\r\n    }\r\n\r\n    handleClick = e => {\r\n        this.setState({\r\n            active: !this.state.active,\r\n        })\r\n    }\r\n\r\n    getTypeNameRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeNameRecursively(type.ofType)\r\n        }\r\n\r\n        return type.name;\r\n    }\r\n\r\n    getTypeKindRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeKindRecursively(type.ofType)\r\n        }\r\n\r\n        return type.kind;\r\n    }\r\n\r\n    receiveFromChild = (model) =>{\r\n\r\n    }\r\n\r\n    isListObject(type){\r\n        switch (type.kind) {\r\n            case TypeKind.NON_NULL:\r\n                return this.receiveFromChild(type.ofType)\r\n            case TypeKind.LIST:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    getListElemTypeName(type){\r\n        switch (type.kind) {\r\n            case TypeKind.NON_NULL:\r\n                return this.getListElemType(type.ofType)\r\n            case TypeKind.LIST:\r\n                return this.getTypeNameRecursively(type.ofType);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    renderInputObjects(){\r\n        if(this.isListObject(this.props.model.type)){\r\n\r\n            return <InputParameter model={this.props.typeDict[this.getListElemTypeName(this.props.model.type)]}\r\n                                   typeDict={this.props.typeDict}\r\n                                   receiver={this.receiveFromChild}\r\n                                   listElem={true}\r\n            />\r\n\r\n        }else if(this.getTypeKindRecursively(this.props.model.type) === TypeKind.INPUT_OBJECT){\r\n\r\n            return this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)].inputFields.map(field =>\r\n                        <InputParameter key={field.name}\r\n                                        model={field}\r\n                                        typeDict={this.props.typeDict}\r\n                                        receiver={this.receiveFromChild}\r\n                        />\r\n                    )\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderInputField(){\r\n        if(this.state.active && this.getTypeKindRecursively(this.props.model.type) !== TypeKind.INPUT_OBJECT){\r\n            return <span >\r\n                <input className={styles.input}/>\r\n            </span>\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.props.listElem){\r\n            return <InputParameterList model={this.props.model}\r\n                                       typeDict={this.props.typeDict}\r\n                                       receiver={this.receiveFromChild}\r\n            />\r\n        }else{\r\n            console.log(this.props.model);\r\n            return (<div className={styles.container} style={{marginLeft: '2em'}}>\r\n                        <button onClick={this.handleClick} className={styles.button}>{this.state.active ? \"-\" : \"+\"}</button>\r\n                        <span className={this.state.active ? styles.active : ''}>\r\n                            {this.props.model.name}: {' '}\r\n                        </span>\r\n                        {this.renderInputField()}\r\n                        <span style={{marginLeft: '3px'}} className={styles.type}>\r\n                            {this.getTypeNameRecursively(this.props.model.type)}\r\n                        </span>\r\n                        {this.props.model.type.kind === TypeKind.NON_NULL && <span className={styles.required}>!</span>}\r\n                        {this.state.active && this.renderInputObjects()}\r\n                    </div>);\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./DynamicParameter.module.css\"\r\nimport {TypeKind} from \"graphql\";\r\nimport InputParameter from \"../InputParameter/InputParameter\";\r\n\r\nexport default class DynamicParameter extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            active: false\r\n        }\r\n\r\n        this.field = {fields:{}, args:{}}\r\n    }\r\n\r\n    handleClick = e => {\r\n        let key = {fields: {}, args:{}};\r\n\r\n        if(this.state.active){\r\n            this.field = {fields: {}, args:{}}\r\n            this.props.receiver({\r\n                fields: {\r\n                    [this.props.model.name]: null\r\n                },\r\n                args: {}\r\n            });\r\n        }else{\r\n            this.props.receiver({\r\n                fields: {\r\n                    [this.props.model.name]: key\r\n                },\r\n                args: {}\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            active: !this.state.active\r\n        })\r\n    }\r\n\r\n    receiveFromChild = fields => {\r\n        this.field.fields = {...this.field.fields, ...fields.fields};\r\n        this.field.args = {...this.field.args, ...fields.args};\r\n\r\n        this.props.receiver({\r\n            fields: {\r\n                [this.props.model.name]: this.field\r\n            },\r\n            args: {}\r\n        });\r\n    }\r\n\r\n    getTypeNameRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeNameRecursively(type.ofType)\r\n        }\r\n\r\n        return type.name;\r\n    }\r\n\r\n    getTypeKindRecursively(type){\r\n        if(type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST){\r\n            return this.getTypeKindRecursively(type.ofType)\r\n        }\r\n\r\n        return type.kind;\r\n    }\r\n\r\n    renderFields(){\r\n        if(this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)].fields === null){\r\n            return null;\r\n        }\r\n\r\n        return this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)].fields.map(field =>\r\n            <DynamicParameter key={field.name}\r\n                              model={field}\r\n                              typeDict={this.props.typeDict}\r\n                              tab={2}\r\n                              receiver={this.receiveFromChild}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderArgs(){\r\n        if(!this.props.model.args?.length){\r\n            return null;\r\n        }\r\n\r\n        return this.props.model.args.map(arg =>\r\n            <InputParameter key={arg.name}\r\n                            model={arg}\r\n                            typeDict={this.props.typeDict}\r\n                            receiver={this.receiveFromChild}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const type = this.props.typeDict[this.getTypeNameRecursively(this.props.model.type)];\r\n        const fieldCount = type.fields?.length;\r\n        const argCount = this.props.model.args?.length;\r\n\r\n        return (<div style={{marginLeft: `${this.props.tab}em`}} className={styles.container}>\r\n                    <button onClick={this.handleClick} className={styles.button}>{this.state.active ? \"-\" : \"+\"}</button>\r\n                    <span className={this.state.active ? styles.active : ''}>\r\n                        {this.props.model.name}\r\n                    </span>\r\n                    {(this.state.active && argCount > 0) && <div className={styles.inputFieldLabel} style={{marginLeft: '1em'}}>Input Fields: </div>}\r\n                    {this.state.active && this.renderArgs()}\r\n                    {(this.state.active && fieldCount > 0) && <div className={styles.queryFieldLabel} style={{marginLeft: '1em'}}>Result Fields: </div>}\r\n                    {this.state.active && this.renderFields()}\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./QueryField.module.css\"\r\nimport DynamicParameter from \"../dynamicParameter/DynamicParameter\";\r\n\r\nexport default class QueryField extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            queryType: undefined,\r\n            queryFieldType: undefined,\r\n        }\r\n\r\n        this.queryType = {\r\n            query: 'query',\r\n            mutation: 'mutation',\r\n            __schema: '__schema'\r\n        }\r\n\r\n        this.queryObject = {}\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    }\r\n\r\n    renderQuery(){\r\n        switch (this.state.queryType) {\r\n            case this.queryType.query:\r\n                return this.renderFields(this.props.schema.queryType);\r\n            case this.queryType.mutation:\r\n                return this.renderFields(this.props.schema.mutationType);\r\n            case this.queryType.__schema:\r\n                return this.renderFields(this.props.typeDict[\"__Schema\"]);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    renderFields(model){\r\n        return model.fields.map(field => <DynamicParameter key={'q' + field.name}\r\n                                                           model={field}\r\n                                                           typeDict={this.props.typeDict}\r\n                                                           tab={2}\r\n                                                           receiver={this.receiveQueryFields}\r\n                                            />)\r\n    }\r\n\r\n    handleQueryTypeChange = e =>{\r\n        this.setState({\r\n            queryType: e.target.value\r\n        })\r\n    }\r\n\r\n    receiveQueryFields = fields => {\r\n        this.queryObject = {...this.queryObject, ...fields}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container} >\r\n                {!this.props.connected && <span className={styles.red}>connection not established...</span>}\r\n                {this.props.connected && <div className={styles.textareaContainer} >\r\n\r\n                    <select onChange={this.handleQueryTypeChange} className={styles.select}>\r\n                        <option>Select query type</option>\r\n                        <option>query</option>\r\n                        <option>mutation</option>\r\n                        <option>__schema</option>\r\n                    </select>\r\n                    {this.renderQuery()}\r\n                </div>}\r\n                {this.props.connected && <button className={styles.button} onClick={this.handleClick}>\r\n                    Send Query\r\n                </button>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    serializeQuery(queryObject){\r\n        let res = ''\r\n\r\n        const keys = Object.keys(queryObject);\r\n        for(let i=0;i<keys.length;i++){\r\n            const key = keys[i];\r\n            if(queryObject[key] === null){\r\n                continue;\r\n            }\r\n\r\n            const fields = queryObject[key].fields;\r\n\r\n            if(!Object.keys(fields).length) {\r\n                res += key + ' ';\r\n            }\r\n            else if(Object.keys(fields).length === 0){\r\n                return null;\r\n            }else{\r\n                const addition = this.serializeQuery(fields);\r\n                if(!addition){\r\n                    return null;\r\n                }\r\n\r\n                res += key + '{';\r\n                res += addition + ' ';\r\n                res += '}';\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    handleClick = e => {\r\n        const serializedQuery = this.serializeQuery(this.queryObject.fields);\r\n        if(!serializedQuery){\r\n            alert(\"error message gonna be better\")\r\n            return\r\n        }\r\n\r\n        let query = `${this.state.queryType}{${serializedQuery}}`;\r\n        if(this.state.queryType === this.queryType.__schema){\r\n            query = `{ ${this.state.queryType}{${serializedQuery}}}`;\r\n        }\r\n\r\n        this.props.queryHandler(query);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./JsonDIsplayer.module.css\"\r\nimport jsonTheme from \"../../JsonColorScheme.module.css\"\r\n\r\nexport default class JsonDisplayer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.viewportRef = React.createRef();\r\n        this.data = [];\r\n\r\n        this.refArr = []\r\n    }\r\n\r\n    /*handleScroll = (scrolltop) => {\r\n        if(this.viewportRef.current.scrollTop > this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight){\r\n            const diff = Math.ceil((this.viewportRef.current.scrollTop - (this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight)) / this.props.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex + diff;\r\n            if(newMinIndex + this.props.displayedDataSize <= this.data.length){\r\n                this.setState({\r\n                    minIndex: newMinIndex,\r\n                    scrollTopNumUp: this.state.scrollTopNumUp + diff,\r\n                    scrollTopNumDown: this.state.scrollTopNumDown - diff,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: Math.max(0,this.data.length - this.props.displayedDataSize),\r\n                    scrollTopNumUp: Math.max(this.data.length - this.props.displayedDataSize),\r\n                    scrollTopNumDown: 0,\r\n                });\r\n            }\r\n        }else if(this.viewportRef.current.scrollTop < this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight){\r\n            const diff = Math.ceil((this.props.tolerance * this.props.lineHeight + this.state.scrollTopNumUp * this.props.lineHeight - this.viewportRef.current.scrollTop) / this.props.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex - diff;\r\n            if(newMinIndex >= 0){\r\n                this.setState({\r\n                    minIndex: newMinIndex,\r\n                    scrollTopNumUp: this.state.scrollTopNumUp - diff,\r\n                    scrollTopNumDown: this.state.scrollTopNumDown + diff,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: 0,\r\n                    scrollTopNumUp: 0,\r\n                    scrollTopNumDown: Math.max(0,this.data.length - this.props.displayedDataSize),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getData(offset, length) {\r\n\r\n        const data = []\r\n        let j = 0;\r\n        for(let i=offset;i<length+offset;i++){\r\n            data.push({\r\n                index: j,\r\n                key: i,\r\n                text: i + \") asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd\"\r\n            });\r\n            j++;\r\n        }\r\n\r\n        return data;\r\n    }*/\r\n\r\n    handleScroll = e => {\r\n        this.props.scrollHandler(this.viewportRef.current.scrollTop, this.props.data.length);\r\n    }\r\n\r\n    getData(offset, length) {\r\n\r\n        return this.props.data.slice(offset,length + offset);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.visible){\r\n            return null;\r\n        }\r\n\r\n        const data = this.getData(this.props.minIndex, Math.min(this.props.data.length, this.props.displayedDataSize));\r\n        const upVirtualHeight = this.props.minIndex * this.props.lineHeight;\r\n        const downVirtualHeight = (this.props.data.length - this.props.displayedDataSize - this.props.minIndex) * this.props.lineHeight;\r\n\r\n        return (<div className={styles.container}\r\n                     ref={this.viewportRef}\r\n                     style={{lineHeight: `${this.props.lineHeight}px`}}\r\n                     onScroll={this.handleScroll}\r\n        >\r\n            <div className={styles.virtualPad} style={{height: `${upVirtualHeight}px`, minHeight: `${upVirtualHeight}px`}}/>\r\n\r\n            {data.map(row => <div key={row.key} className={styles.row}>\r\n                <span style={{paddingLeft: `${row.tabs}em`}} />\r\n                {row.markup}\r\n            </div>)}\r\n\r\n            <div className={styles.virtualPad} style={{height: `${downVirtualHeight}px`, minHeight: `${downVirtualHeight}px`}}/>\r\n        </div>)\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Generated.css\"\r\nimport styles from \"./LoadingIcon.module.css\"\r\n\r\nexport default class LoadingIcon extends React.Component{\r\n\r\n    render(){\r\n        if(!this.props.visible){\r\n            return null;\r\n        }\r\n\r\n        return (<div className={styles.container}>\r\n                    <div className=\"loadingio-spinner-rolling-b59357emld\">\r\n                        <div className=\"ldio-4m4wdo0nu9b\">\r\n                            <div/>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from './QueryConsole.module.css'\r\nimport QueryField from \"../queryField/QueryField\";\r\nimport JsonDisplayer from \"../jsonDisplayer/JsonDisplayer\";\r\nimport LoadingIcon from \"../loadingIcon/LoadingIcon\";\r\nimport jsonTheme from \"../../JsonColorScheme.module.css\"\r\n\r\nexport default class QueryConsole extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            consoleWidth: 1200,\r\n            prevX: undefined,\r\n            drag: false,\r\n            minIndex: 0,\r\n        }\r\n\r\n        this.lineHeight = 18;\r\n        this.displayedDataSize = 70;\r\n        this.tolerance = 10;\r\n\r\n        this.addEventListeners();\r\n        this.consoleRef = React.createRef();\r\n        this.containerRef = React.createRef();\r\n    }\r\n\r\n    handleScroll = (scrollTop, dataLength) => {\r\n\r\n        const scrollTopNumUp = this.state.minIndex;\r\n\r\n        if(scrollTop > (this.tolerance + scrollTopNumUp) * this.lineHeight){\r\n            const diff = Math.ceil((scrollTop - (this.tolerance * this.lineHeight + scrollTopNumUp * this.lineHeight)) / this.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex + diff;\r\n            if(newMinIndex + this.displayedDataSize <= dataLength){\r\n                this.setState({\r\n                    minIndex: newMinIndex,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: Math.max(0, dataLength - this.displayedDataSize),\r\n                });\r\n            }\r\n        }else if(scrollTop < this.tolerance * this.lineHeight + scrollTopNumUp * this.lineHeight){\r\n            const diff = Math.ceil((this.tolerance * this.lineHeight + scrollTopNumUp * this.lineHeight - scrollTop) / this.lineHeight);\r\n\r\n            const newMinIndex = this.state.minIndex - diff;\r\n            if(newMinIndex >= 0){\r\n                this.setState({\r\n                    minIndex: newMinIndex\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    minIndex: 0\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getRenderModel(tabs, markup){\r\n        return {\r\n            tabs,\r\n            markup,\r\n        }\r\n    }\r\n\r\n    recursiveRenderJsonObject(model, tabs){\r\n        let result = []\r\n\r\n        if(Array.isArray(model)){\r\n            result.push(this.getRenderModel(tabs, \"[\"));\r\n            model.forEach(entry => {\r\n                result = result.concat(this.recursiveRenderJsonObject(entry, tabs + 1))\r\n            })\r\n            result.push(this.getRenderModel(tabs, \"],\"));\r\n        }else if(typeof model === 'object'){\r\n            result.push(this.getRenderModel(tabs, \"{\"));\r\n            result = result.concat(this.recursiveRenderJsonObjectBody(model, tabs + 1))\r\n            result.push(this.getRenderModel(tabs, \"},\"));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    recursiveRenderJsonObjectBody(model, tabs){\r\n\r\n        let result = []\r\n\r\n        if(Array.isArray(model)){\r\n            model.forEach(entry => {\r\n                result = result.concat(this.recursiveRenderJsonObject(entry))\r\n            })\r\n        }else if(typeof model === 'object'){\r\n            Object.keys(model).forEach(key => {\r\n               if(Array.isArray(model[key])){\r\n                   result.push(this.getRenderModel(tabs, <span><span className={jsonTheme.key}>{key}</span>: [</span>/*`${key}: [`*/))\r\n                   model[key].forEach(entry => {\r\n                       result = result.concat(this.recursiveRenderJsonObject(entry, tabs + 1))\r\n                   })\r\n                   result.push(this.getRenderModel(tabs, `],`))\r\n               } else if(model[key] === null || model[key] === undefined){\r\n                   result.push(this.getRenderModel(tabs, <span className={jsonTheme.key}>{key}: <span className={jsonTheme.nullColor}>null</span></span>/*`${key}: null,`*/))\r\n               }else if(typeof model[key] === 'object'){\r\n                   result.push(this.getRenderModel(tabs, <span><span className={jsonTheme.key}>{key}</span>: {'{'}</span>/*`${key}: {`*/))\r\n                   result = result.concat(this.recursiveRenderJsonObjectBody(model[key], tabs + 1))\r\n                   result.push(this.getRenderModel(tabs, `},`))\r\n               }else if(typeof model[key] === 'number'){\r\n                   result.push(this.getRenderModel(tabs, <span className={jsonTheme.key}>{key}: <span className={jsonTheme.numValue}>{model[key]}</span></span>/*`${key}: ${model[key]}`*/))\r\n               }else{\r\n                   result.push(this.getRenderModel(tabs, <span className={jsonTheme.key}>{key}: <span className={jsonTheme.numValue}>{'\"'}{model[key]}{'\"'}</span></span>/*`${key}: \"${model[key]}\"`*/))\r\n               }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    recursiveRenderJson(model){\r\n\r\n        return this.recursiveRenderJsonObject(model, 0).map((entry, i) => {\r\n            return {\r\n                key: i,\r\n                markup: entry.markup,\r\n                tabs: entry.tabs,\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div className={styles.container} ref={this.containerRef}>\r\n                    <div className={styles.queryContainer} style={{width: `${this.state.consoleWidth}px`}} ref={this.consoleRef}>\r\n                        <QueryField queryHandler={this.props.queryHandler}\r\n                                    schema={this.props.schema}\r\n                                    typeDict={this.props.typeDict}\r\n                                    connected={this.props.connected}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.handle} onMouseDown={this.handleMouseDown}>\r\n                        <div className={styles.handleVision}>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.resultContainer} style={{width: `${window.innerWidth - this.state.consoleWidth}px`}}>\r\n                        <JsonDisplayer data={this.recursiveRenderJson(this.props.result)}\r\n                                       visible={!this.props.loading}\r\n                                       lineHeight={18}\r\n                                       tolerance={10}\r\n                                       displayedDataSize={70}\r\n                                       scrollHandler={this.handleScroll}\r\n                                       minIndex={this.state.minIndex}\r\n                        />\r\n                        <LoadingIcon visible={this.props.loading}/>\r\n                    </div>\r\n                </div>);\r\n    }\r\n\r\n    handleMouseDown = e => {\r\n        this.setState({drag: true, prevX: e.clientX});\r\n    }\r\n\r\n\r\n    handleMouseUp = e => {\r\n        this.setState({drag: false, prevX: undefined});\r\n    }\r\n\r\n    moveHandler = e => {\r\n        if(this.state.drag){\r\n            const diff = e.clientX - this.state.prevX;\r\n            const newConsoleWidth = this.state.consoleWidth + diff;\r\n            this.setState({prevX: e.clientX, consoleWidth: newConsoleWidth})\r\n\r\n        }\r\n    }\r\n\r\n    handleResize = e => {\r\n        this.setState({consoleWidth: this.consoleRef.current.getBoundingClientRect().width})\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n        document.addEventListener(\"mousemove\", this.moveHandler);\r\n        window.addEventListener('resize',this.handleResize);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Graphite.module.css\"\r\nimport  {introspectionQuery} from \"../../utils/introspection/introspection\";\r\nimport Schema from \"../schema/Schema\";\r\nimport QueryConsole from \"../queryConsole/QueryConsole\";\r\n\r\nexport default class Graphite extends React.Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            schemaModel: {\r\n                types: []\r\n            },\r\n            addressValue: 'http://localhost:4466',\r\n            drag: false,\r\n            queryWidth: 1200,\r\n            queryResult: '',\r\n            loading: false,\r\n            typeDict: {},\r\n            connectionEstablished: false\r\n        };\r\n\r\n        this.addEventListeners();\r\n        this.queryWindowRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSchema({});\r\n    }\r\n\r\n    fetchSchema = (event) => {\r\n        fetch(this.state.addressValue, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                query: introspectionQuery\r\n            }),\r\n        }).then(res => {\r\n            if(res.ok){\r\n                return res.json();\r\n            }\r\n            throw res.statusText;\r\n        }).then(obj => {\r\n            const dict = {};\r\n            obj.data.__schema.types.forEach(type => {\r\n                dict[type.name] = type;\r\n            })\r\n            this.setState({\r\n                schemaModel: obj.data.__schema,\r\n                typeDict: dict,\r\n                connectionEstablished: true,\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    sendQuery = query => {\r\n        this.setState({loading: true})\r\n        fetch(this.state.addressValue, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                query: query.replace(/\\s\\s+/g, ' ')\r\n            })\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(obj => {\r\n            if(obj.errors !== undefined){\r\n                this.handleError(obj.errors);\r\n            }else if(obj.data !== undefined){\r\n                this.handleData(obj.data);\r\n            }\r\n        }).catch(error => {\r\n            this.handleError({message: error.message});\r\n        });\r\n    }\r\n\r\n    handleError(errors){\r\n        this.setState({queryResult: errors, loading: false})\r\n    }\r\n\r\n    handleData(data){\r\n        this.setState({queryResult: data, loading: false})\r\n    }\r\n\r\n    inputChanged = (event) => {\r\n        this.setState({\r\n            addressValue: event.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (<div className={styles.container}>\r\n                    <div className={styles.ideContainer} ref={this.queryWindowRef} >\r\n                        <div className={styles.addressContainer}>\r\n                            <input type={'text'} value={this.state.addressValue} onChange={this.inputChanged}/>\r\n                            <button onClick={this.fetchSchema}>Fetch</button>\r\n                        </div>\r\n\r\n                        <div className={styles.queryContainer}>\r\n                            <QueryConsole queryWidth={this.state.queryWidth}\r\n                                          queryHandler={this.handleQuery}\r\n                                          result={this.state.queryResult}\r\n                                          loading={this.state.loading}\r\n                                          schema={this.state.schemaModel}\r\n                                          typeDict={this.state.typeDict}\r\n                                          connected={this.state.connectionEstablished}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n    }\r\n\r\n    handleQuery = query => {\r\n        this.sendQuery(query)\r\n    }\r\n\r\n    downHandler = e => {\r\n        this.setState({drag: true, prevX: e.clientX});\r\n    }\r\n\r\n    upHandler = e => {\r\n        this.setState({drag: false, prevX: undefined});\r\n    }\r\n\r\n    moveHandler = e => {\r\n        if(this.state.drag){\r\n            const diff = e.clientX - this.state.prevX;\r\n            const newQueryWidth = this.state.queryWidth + diff;\r\n            if(newQueryWidth >= 400 && window.innerWidth - newQueryWidth >= 300){\r\n                this.setState({prevX: e.clientX, queryWidth: newQueryWidth});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleResize = e => {\r\n        this.setState({queryWidth: this.queryWindowRef.current.getBoundingClientRect().width})\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener(\"mousemove\", this.moveHandler);\r\n        document.addEventListener(\"mouseup\", this.upHandler);\r\n        window.addEventListener('resize',this.handleResize );\r\n    }\r\n}\r\n","import { gql } from 'graphql.macro';\r\n\r\nexport const queryObject1 = gql`\r\n    query {\r\n        __schema{\r\n            types{\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const queryObject = gql`\r\n    \r\n    query {\r\n        __schema{\r\n            types{\r\n                ...Type\r\n            }\r\n            queryType{\r\n                ...Type\r\n            }\r\n            mutationType{\r\n                ...Type\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    fragment Type on __Type{\r\n        kind\r\n        name\r\n        description\r\n        fields{\r\n            ...Field\r\n        }\r\n        interfaces{\r\n            ...RecursiveType\r\n        }\r\n        possibleTypes{\r\n            name\r\n            kind\r\n        }\r\n        enumValues{\r\n            name,\r\n            description\r\n        }\r\n        inputFields{\r\n            name\r\n            description\r\n            defaultValue\r\n            type{\r\n                ...RecursiveType\r\n            }\r\n        }\r\n    }\r\n    \r\n    fragment Field on __Field{\r\n        name\r\n        description\r\n        type{\r\n            ...RecursiveType\r\n        }\r\n        args{\r\n            name\r\n            description\r\n            type{\r\n                ...RecursiveType\r\n            }\r\n            defaultValue\r\n        }\r\n    }\r\n    \r\n    fragment RecursiveType on __Type{\r\n        name\r\n        kind\r\n        ofType{\r\n            name\r\n            kind\r\n            ofType{\r\n                name\r\n                kind\r\n                ofType{\r\n                    name\r\n                    kind\r\n                    ofType{\r\n                        name\r\n                        kind\r\n                        ofType{\r\n                            name\r\n                            kind\r\n                            ofType{\r\n                                name\r\n                                kind\r\n                                ofType{\r\n                                    name\r\n                                    kind\r\n                                    ofType{\r\n                                        name\r\n                                        kind\r\n                                        ofType{\r\n                                            name\r\n                                            kind\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const introspectionQuery = queryObject.loc.source.body;\r\n","import React from 'react';\r\nimport Graphite from \"../graphite/Graphite\";\r\n\r\nfunction App() {\r\n    return <Graphite/>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}